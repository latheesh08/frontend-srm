{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/home/studentHome/Details.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CardHeader, CardActions, Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { dateDiff } from \"../../../shared/datediff\";\nimport remindersvg from \"../../../assets/images/home/reminder.svg\";\nimport HomeService from \"../HomeSerivce\";\nimport Reminder from \"./Reminder\";\nconst useStyle = makeStyles(theme => ({\n  cardContainer: {\n    overflowY: \"auto\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\"\n    }\n  },\n  card: {\n    width: \"95%\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    borderRadius: \"10px\",\n    boxShadow: \"none\"\n  },\n  reminder: {// width: \"100%\",\n    // textAlign: \"right\",\n  },\n  contentMargin: {\n    marginTop: \"16px\"\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontSize: \"14px\"\n  },\n  media: {\n    \"& img\": {\n      margin: \"auto\"\n    }\n  },\n  announcementText: {\n    fontStyle: \"normal\",\n    fontSize: \"14px\"\n  },\n  announcementImg: {\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    \"& img\": {\n      maxWidth: \"100%\",\n      border: `1px solid ${theme.palette.common.deluge}`,\n      borderRadius: \"4px\"\n    }\n  },\n  descriptionContent: {\n    width: \"100%\",\n    margin: \"auto\"\n  },\n  NewsHeader: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"8px 16px 8px 16px !important\",\n      \"& span\": {\n        fontSize: \"16px\"\n      }\n    }\n  },\n  publishDate: {\n    fontSize: \"14px\",\n    color: \"#6C757D\"\n  },\n  cardContent: {\n    padding: \"0px 16px 0px 16px\"\n  },\n  statusText: {\n    fontStyle: \"normal\",\n    textTransform: \"uppercase\",\n    paddingRight: \"5px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"13px\"\n    }\n  },\n  cardActionStyle: {\n    padding: \"8px 16px 8px 16px\",\n    color: \"#6C757D\"\n  },\n  contentCenter: {\n    textAlign: \"right\",\n    height: \"50%\",\n    \"& img\": {\n      marginTop: \"25px\",\n      width: \"25px\",\n      cursor: \"pointer\",\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: \"10px\"\n      }\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      textAlign: \"right\"\n    }\n  },\n  editBtn: {\n    marginLeft: \"auto\",\n    cursor: \"pointer\"\n  }\n}));\n\nconst Details = props => {\n  const classes = useStyle();\n  const history = useHistory();\n  const statusColors = {\n    draft: \"red\",\n    published: \"#7B72AF\",\n    active: \"green\"\n  };\n  const [details, setDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [openReminder, setOpenReminder] = useState(false);\n  const [reminderDays, setReminderDays] = useState(null);\n  const [reminderIcon, setReminderIcon] = useState(true);\n  const selectedRole = props.selectedRole;\n\n  async function getNewsDetails(newsId) {\n    try {\n      const token = localStorage.getItem(\"srmToken\");\n      const response = await HomeService.fetchAnnouncementDetail(newsId, token);\n      setDetails(response.data.data);\n      setIsLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  useEffect(() => {\n    if (details.event_date && props.userId !== details.created_by) {\n      const response = dateDiff(details.event_date);\n\n      if (!response) {\n        setReminderIcon(false);\n      } else {\n        setReminderIcon(true);\n      }\n    } else {\n      setReminderIcon(false);\n    }\n  }, [details]);\n  useEffect(() => {\n    getNewsDetails(props.newsId);\n  }, []);\n\n  const handleReminderOpen = () => {\n    const response = dateDiff(details.event_date);\n\n    if (response) {\n      setOpenReminder(true);\n      setReminderDays(response);\n    }\n  };\n\n  const handleReminderClose = checkboxes => {\n    console.log(checkboxes);\n    setOpenReminder(false);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, !isLoading ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignContent: \"center\",\n    className: classes.cardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.NewsHeader,\n    action: /*#__PURE__*/React.createElement(React.Fragment, null, details.status === \"published\" && reminderIcon ? /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.reminder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: remindersvg,\n      alt: \"reminder\",\n      onClick: handleReminderOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 25\n      }\n    })) : \"\"),\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, details.title ? details.title : \"N/A\", \" \", selectedRole === \"teacher\" ? /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        color: statusColors[details.status]\n      },\n      className: classes.statusText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 23\n      }\n    }, details.status) : \"\"),\n    subheader: /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.publishDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, `Event Date: ${details.event_date}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: `${classes.title} ${classes.description}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 19\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: classes.contentMargin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.announcementText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 19\n    }\n  }, details.summary)), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: `${classes.title} ${classes.description}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 19\n    }\n  }, \"Description\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  })), details.main_content ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.descriptionContent,\n    dangerouslySetInnerHTML: {\n      __html: details.main_content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, \": No description provided\")), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.publishDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 19\n    }\n  }), `Published Date: ${details.published_date}`)), selectedRole === \"teacher\" && details.status !== \"published\" ? /*#__PURE__*/React.createElement(CardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    disableElevation: true,\n    onClick: event => {\n      history.push(`/create-announcement/${details.id}`);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 19\n    }\n  }, \"Edit\")) : \"\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 11\n    }\n  }), openReminder ? /*#__PURE__*/React.createElement(Reminder, {\n    open: openReminder,\n    onClose: handleReminderClose,\n    days: reminderDays,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 13\n    }\n  }) : \"\") : \"\");\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedRole: state.auth.selectedRole,\n    userId: state.auth.userInfo.id\n  };\n};\n\nexport default connect(mapStateToProps)(Details);","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/home/studentHome/Details.js"],"names":["React","useEffect","useState","connect","CardHeader","CardActions","Button","useHistory","Grid","Card","CardContent","makeStyles","Typography","dateDiff","HomeService","Reminder","useStyle","theme","cardContainer","overflowY","display","card","width","margin","marginTop","borderRadius","boxShadow","reminder","contentMargin","title","fontWeight","fontStyle","fontSize","media","announcementText","announcementImg","justifyContent","textAlign","maxWidth","border","palette","common","deluge","descriptionContent","NewsHeader","breakpoints","down","padding","publishDate","color","cardContent","statusText","textTransform","paddingRight","cardActionStyle","contentCenter","height","cursor","editBtn","marginLeft","Details","props","classes","history","statusColors","draft","published","active","details","setDetails","isLoading","setIsLoading","openReminder","setOpenReminder","reminderDays","setReminderDays","reminderIcon","setReminderIcon","selectedRole","getNewsDetails","newsId","token","localStorage","getItem","response","fetchAnnouncementDetail","data","e","console","log","event_date","userId","created_by","handleReminderOpen","handleReminderClose","checkboxes","status","remindersvg","description","summary","main_content","__html","published_date","event","push","id","mapStateToProps","state","auth","userInfo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { CardHeader, CardActions, Button } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { dateDiff } from \"../../../shared/datediff\";\nimport remindersvg from \"../../../assets/images/home/reminder.svg\";\nimport HomeService from \"../HomeSerivce\";\nimport Reminder from \"./Reminder\";\nconst useStyle = makeStyles((theme) => ({\n  cardContainer: {\n    overflowY: \"auto\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  card: {\n    width: \"95%\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    borderRadius: \"10px\",\n    boxShadow: \"none\",\n  },\n  reminder: {\n    // width: \"100%\",\n    // textAlign: \"right\",\n  },\n  contentMargin: {\n    marginTop: \"16px\",\n  },\n  title: {\n    fontWeight: \"bold\",\n    fontStyle: \"normal\",\n    fontSize: \"14px\",\n  },\n  media: {\n    \"& img\": {\n      margin: \"auto\",\n    },\n  },\n  announcementText: {\n    fontStyle: \"normal\",\n    fontSize: \"14px\",\n  },\n  announcementImg: {\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    \"& img\": {\n      maxWidth: \"100%\",\n      border: `1px solid ${theme.palette.common.deluge}`,\n      borderRadius: \"4px\",\n    },\n  },\n  descriptionContent: {\n    width: \"100%\",\n    margin: \"auto\",\n  },\n\n  NewsHeader: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"8px 16px 8px 16px !important\",\n      \"& span\": {\n        fontSize: \"16px\",\n      },\n    },\n  },\n  publishDate: {\n    fontSize: \"14px\",\n    color: \"#6C757D\",\n  },\n  cardContent: {\n    padding: \"0px 16px 0px 16px\",\n  },\n  statusText: {\n    fontStyle: \"normal\",\n    textTransform: \"uppercase\",\n\n    paddingRight: \"5px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"13px\",\n    },\n  },\n  cardActionStyle: {\n    padding: \"8px 16px 8px 16px\",\n    color: \"#6C757D\",\n  },\n  contentCenter: {\n    textAlign: \"right\",\n    height: \"50%\",\n\n    \"& img\": {\n      marginTop: \"25px\",\n      width: \"25px\",\n      cursor: \"pointer\",\n\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: \"10px\",\n      },\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      textAlign: \"right\",\n    },\n  },\n  editBtn: {\n    marginLeft: \"auto\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst Details = (props) => {\n  const classes = useStyle();\n  const history = useHistory();\n  const statusColors = {\n    draft: \"red\",\n    published: \"#7B72AF\",\n    active: \"green\",\n  };\n  const [details, setDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const [openReminder, setOpenReminder] = useState(false);\n  const [reminderDays, setReminderDays] = useState(null);\n  const [reminderIcon, setReminderIcon] = useState(true);\n  const selectedRole = props.selectedRole;\n\n  async function getNewsDetails(newsId) {\n    try {\n      const token = localStorage.getItem(\"srmToken\");\n      const response = await HomeService.fetchAnnouncementDetail(newsId, token);\n\n      setDetails(response.data.data);\n      setIsLoading(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  useEffect(() => {\n    if (details.event_date && props.userId !== details.created_by) {\n      const response = dateDiff(details.event_date);\n\n      if (!response) {\n        setReminderIcon(false);\n      } else {\n        setReminderIcon(true);\n      }\n    } else {\n      setReminderIcon(false);\n    }\n  }, [details]);\n\n  useEffect(() => {\n    getNewsDetails(props.newsId);\n  }, []);\n\n  const handleReminderOpen = () => {\n    const response = dateDiff(details.event_date);\n    if (response) {\n      setOpenReminder(true);\n      setReminderDays(response);\n    }\n  };\n  const handleReminderClose = (checkboxes) => {\n    console.log(checkboxes);\n    setOpenReminder(false);\n  };\n  return (\n    <>\n      {!isLoading ? (\n        <>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"center\"\n            alignContent=\"center\"\n            className={classes.cardContainer}\n          >\n            <Card className={classes.card}>\n              <CardHeader\n                className={classes.NewsHeader}\n                action={\n                  <>\n                    {details.status === \"published\" && reminderIcon ? (\n                      <div className={classes.reminder}>\n                        <img\n                          src={remindersvg}\n                          alt=\"reminder\"\n                          onClick={handleReminderOpen}\n                        ></img>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </>\n                }\n                title={\n                  <span>\n                    {details.title ? details.title : \"N/A\"}{\" \"}\n                    {selectedRole === \"teacher\" ? (\n                      <Typography\n                        style={{\n                          color: statusColors[details.status],\n                        }}\n                        className={classes.statusText}\n                      >\n                        {details.status}\n                      </Typography>\n                    ) : (\n                      \"\"\n                    )}\n                  </span>\n                }\n                subheader={\n                  <span className={classes.publishDate}>\n                    {`Event Date: ${details.event_date}`}\n                  </span>\n                }\n              />\n              <CardContent className={classes.cardContent}>\n                {/* Conditional rendering of Grid based on availablity image */}\n                <Grid container direction=\"row\">\n                  <Typography\n                    className={`${classes.title} ${classes.description}`}\n                  >\n                    Summary\n                  </Typography>\n                  <br />\n                </Grid>\n                <Grid\n                  container\n                  direction=\"row\"\n                  className={classes.contentMargin}\n                >\n                  <Typography className={classes.announcementText}>\n                    {details.summary}\n                  </Typography>\n                </Grid>\n                <hr />\n                <Grid container direction=\"row\">\n                  <Typography\n                    className={`${classes.title} ${classes.description}`}\n                  >\n                    Description\n                    <br />\n                  </Typography>\n                  {details.main_content ? (\n                    <div\n                      className={classes.descriptionContent}\n                      dangerouslySetInnerHTML={{ __html: details.main_content }}\n                    />\n                  ) : (\n                    <Typography className={classes.title}>\n                      {\": No description provided\"}\n                    </Typography>\n                  )}\n                </Grid>\n                <Typography className={classes.publishDate}>\n                  <br />\n                  {`Published Date: ${details.published_date}`}\n                </Typography>\n              </CardContent>\n              {selectedRole === \"teacher\" && details.status !== \"published\" ? (\n                <CardActions>\n                  <Button\n                    color=\"primary\"\n                    variant=\"contained\"\n                    disableElevation\n                    onClick={(event) => {\n                      history.push(`/create-announcement/${details.id}`);\n                    }}\n                  >\n                    Edit\n                  </Button>\n                </CardActions>\n              ) : (\n                \"\"\n              )}\n            </Card>\n          </Grid>\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          <br />\n          {openReminder ? (\n            <Reminder\n              open={openReminder}\n              onClose={handleReminderClose}\n              days={reminderDays}\n            />\n          ) : (\n            \"\"\n          )}\n        </>\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedRole: state.auth.selectedRole,\n    userId: state.auth.userInfo.id,\n  };\n};\n\nexport default connect(mapStateToProps)(Details);\n"]},"metadata":{},"sourceType":"module"}