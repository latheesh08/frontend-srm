{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/newsAnnouncement/AnnouncementSection.js\";\nimport \"date-fns\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport Box from \"@material-ui/core/Box\";\nimport { Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport AnnouncementService from \"./AnnouncementService\";\nimport AddIcon from \"../../assets/images/Add.svg\";\nimport AnnouncementCard from \"../home/studentHome/AnnouncementCard\";\nimport NewsCard from \"./teacher/NewsCard\";\nconst useStyles = makeStyles(theme => ({\n  datePicker: {\n    width: \"25%\",\n    paddingRight: \"10px\"\n  },\n  sectionContainer: {\n    height: \"100%\",\n    width: \"100%\"\n  },\n  header: {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    paddingTop: \"10px\",\n    textAlign: \"right\"\n  },\n  cardBoxPadding: {\n    padding: \"0px 24px 24px 24px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"16px\"\n    }\n  },\n  addNew: {\n    color: theme.palette.common.deluge,\n    marginTop: \"15px\",\n    marginRight: \"15px\",\n    cursor: \"pointer\",\n    \"& .new\": {\n      float: \"right\",\n      fontSize: \"14px\",\n      padding: \"5px\"\n    },\n    \"& img\": {\n      margin: \"5px\",\n      height: \"20px\",\n      cursor: \"pointer\"\n    }\n  },\n  loading: {\n    width: \"100%\",\n    textAlign: \"center\",\n    paddingTop: \"8px\",\n    fontSize: \"20px\"\n  }\n}));\n\nconst AnnouncementSection = props => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [selectedFromDate, setFromDate] = useState(null);\n  const [selectedToDate, setToDate] = useState(null);\n  const selectedRole = props.selectedRole;\n  const [hasMore, setHasMore] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [announcements, setAnnouncements] = useState([]); // const [isAnnouncementLoading, setIsAnnouncementLoading] = useState(true);\n\n  useEffect(() => {\n    let isAnnouncementLoading = true;\n\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"srmToken\");\n        const selectedRole = props.selectedRole;\n        const createdBy = props.createdBy;\n        let params = {};\n\n        if (createdBy) {\n          params = {\n            selectedRole,\n            currentPage,\n            createdBy\n          };\n        } else {\n          params = {\n            selectedRole,\n            currentPage\n          };\n        }\n\n        const response = await AnnouncementService.fetchAnnouncements(params, token);\n        console.log(response.data.data);\n\n        if (response.status === 200) {\n          if (response.data.data.current_page === response.data.data.last_page) {\n            if (isAnnouncementLoading) {\n              setAnnouncements([...announcements, ...response.data.data.data]);\n              setHasMore(false);\n            }\n          } else {\n            if (isAnnouncementLoading) {\n              setAnnouncements([...announcements, ...response.data.data.data]);\n              setCurrentPage(currentPage + 1);\n            }\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchData();\n    return () => {\n      isAnnouncementLoading = false;\n    };\n  }, []);\n\n  const fetchAnnouncementOnScroll = async () => {\n    try {\n      const token = localStorage.getItem(\"srmToken\");\n      const selectedRole = props.selectedRole;\n      const createdBy = props.createdBy;\n      let params = {};\n\n      if (createdBy) {\n        params = {\n          selectedRole,\n          currentPage,\n          createdBy\n        };\n      } else {\n        params = {\n          selectedRole,\n          currentPage\n        };\n      }\n\n      const response = await AnnouncementService.fetchAnnouncements(params, token);\n\n      if (response.status === 200) {\n        // console.log(response);\n        if (response.data.data.current_page !== response.data.data.last_page) {\n          setAnnouncements([...announcements, ...response.data.data.data]);\n          setCurrentPage(currentPage + 1);\n        } else {\n          setAnnouncements([...announcements, ...response.data.data.data]);\n          setHasMore(false);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFromDateChange = date => {\n    setFromDate(date);\n  };\n\n  const handleToDateChange = date => {\n    setToDate(date);\n  };\n\n  const handleCreateAnnouncement = async () => {\n    try {\n      const token = localStorage.getItem(\"srmToken\");\n      const response = await AnnouncementService.createAnnouncement(token); // console.log(response);\n\n      history.push(`/create-announcement/${response.data.news_id}`); // history.push(`/create-announcement/${65}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  let content = announcements.map((announcement, index) => {\n    return /*#__PURE__*/React.createElement(NewsCard, {\n      key: announcement.id,\n      announcement: announcement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 12\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sectionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 5\n    }\n  }, props.createdBy ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, selectedRole === \"teacher\" || selectedRole === \"admin\" ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.addNew,\n    onClick: handleCreateAnnouncement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: AddIcon,\n    alt: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"New\")) : \"\") : \"\", /*#__PURE__*/React.createElement(Box, {\n    className: classes.cardBoxPadding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: announcements.length,\n    next: fetchAnnouncementOnScroll,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"primary\",\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    })),\n    scrollableTarget: \"scrollable\",\n    scrollThreshold: 0.2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, content)));\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedRole: state.auth.selectedRole\n  };\n};\n\nexport default connect(mapStateToProps)(AnnouncementSection);","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/newsAnnouncement/AnnouncementSection.js"],"names":["React","useState","useRef","useEffect","connect","useHistory","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Box","Typography","CircularProgress","InfiniteScroll","AnnouncementService","AnnouncementCard","NewsCard","useStyles","theme","datePicker","width","paddingRight","sectionContainer","height","header","paddingLeft","paddingTop","textAlign","cardBoxPadding","padding","breakpoints","down","addNew","color","palette","common","deluge","marginTop","marginRight","cursor","float","fontSize","margin","loading","AnnouncementSection","props","classes","history","selectedFromDate","setFromDate","selectedToDate","setToDate","selectedRole","hasMore","setHasMore","currentPage","setCurrentPage","announcements","setAnnouncements","isAnnouncementLoading","fetchData","token","localStorage","getItem","createdBy","params","response","fetchAnnouncements","console","log","data","status","current_page","last_page","e","fetchAnnouncementOnScroll","error","handleFromDateChange","date","handleToDateChange","handleCreateAnnouncement","createAnnouncement","push","news_id","content","map","announcement","index","id","AddIcon","length","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import \"date-fns\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport Box from \"@material-ui/core/Box\";\nimport { Typography } from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport AnnouncementService from \"./AnnouncementService\";\nimport AddIcon from \"../../assets/images/Add.svg\";\nimport AnnouncementCard from \"../home/studentHome/AnnouncementCard\";\nimport NewsCard from \"./teacher/NewsCard\";\n\nconst useStyles = makeStyles((theme) => ({\n  datePicker: {\n    width: \"25%\",\n    paddingRight: \"10px\",\n  },\n  sectionContainer: {\n    height: \"100%\",\n    width: \"100%\",\n  },\n\n  header: {\n    paddingRight: \"15px\",\n    paddingLeft: \"15px\",\n    paddingTop: \"10px\",\n    textAlign: \"right\",\n  },\n  cardBoxPadding: {\n    padding: \"0px 24px 24px 24px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"16px\",\n    },\n  },\n  addNew: {\n    color: theme.palette.common.deluge,\n\n    marginTop: \"15px\",\n    marginRight: \"15px\",\n    cursor: \"pointer\",\n    \"& .new\": {\n      float: \"right\",\n      fontSize: \"14px\",\n      padding: \"5px\",\n    },\n    \"& img\": {\n      margin: \"5px\",\n      height: \"20px\",\n      cursor: \"pointer\",\n    },\n  },\n  loading: {\n    width: \"100%\",\n    textAlign: \"center\",\n    paddingTop: \"8px\",\n    fontSize: \"20px\",\n  },\n}));\n\nconst AnnouncementSection = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [selectedFromDate, setFromDate] = useState(null);\n  const [selectedToDate, setToDate] = useState(null);\n  const selectedRole = props.selectedRole;\n  const [hasMore, setHasMore] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [announcements, setAnnouncements] = useState([]);\n\n  // const [isAnnouncementLoading, setIsAnnouncementLoading] = useState(true);\n  useEffect(() => {\n    let isAnnouncementLoading = true;\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem(\"srmToken\");\n        const selectedRole = props.selectedRole;\n        const createdBy = props.createdBy;\n        let params = {};\n        if (createdBy) {\n          params = { selectedRole, currentPage, createdBy };\n        } else {\n          params = { selectedRole, currentPage };\n        }\n\n        const response = await AnnouncementService.fetchAnnouncements(\n          params,\n          token\n        );\n        console.log(response.data.data);\n        if (response.status === 200) {\n          if (\n            response.data.data.current_page === response.data.data.last_page\n          ) {\n            if (isAnnouncementLoading) {\n              setAnnouncements([...announcements, ...response.data.data.data]);\n              setHasMore(false);\n            }\n          } else {\n            if (isAnnouncementLoading) {\n              setAnnouncements([...announcements, ...response.data.data.data]);\n              setCurrentPage(currentPage + 1);\n            }\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n\n    return () => {\n      isAnnouncementLoading = false;\n    };\n  }, []);\n\n  const fetchAnnouncementOnScroll = async () => {\n    try {\n      const token = localStorage.getItem(\"srmToken\");\n      const selectedRole = props.selectedRole;\n      const createdBy = props.createdBy;\n      let params = {};\n      if (createdBy) {\n        params = { selectedRole, currentPage, createdBy };\n      } else {\n        params = { selectedRole, currentPage };\n      }\n\n      const response = await AnnouncementService.fetchAnnouncements(\n        params,\n        token\n      );\n\n      if (response.status === 200) {\n        // console.log(response);\n        if (response.data.data.current_page !== response.data.data.last_page) {\n          setAnnouncements([...announcements, ...response.data.data.data]);\n          setCurrentPage(currentPage + 1);\n        } else {\n          setAnnouncements([...announcements, ...response.data.data.data]);\n          setHasMore(false);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n  };\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n  const handleCreateAnnouncement = async () => {\n    try {\n      const token = localStorage.getItem(\"srmToken\");\n      const response = await AnnouncementService.createAnnouncement(token);\n      // console.log(response);\n      history.push(`/create-announcement/${response.data.news_id}`);\n      // history.push(`/create-announcement/${65}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  let content = announcements.map((announcement, index) => {\n    return <NewsCard key={announcement.id} announcement={announcement} />;\n  });\n  return (\n    <div className={classes.sectionContainer}>\n      {props.createdBy ? (\n        <div className={classes.header}>\n          {selectedRole === \"teacher\" || selectedRole === \"admin\" ? (\n            <div className={classes.addNew} onClick={handleCreateAnnouncement}>\n              <img src={AddIcon} alt=\"add\" />\n              <Typography className=\"new\">New</Typography>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      ) : (\n        \"\"\n      )}\n      <Box className={classes.cardBoxPadding}>\n        <InfiniteScroll\n          dataLength={announcements.length}\n          next={fetchAnnouncementOnScroll}\n          hasMore={hasMore}\n          loader={\n            <>\n              <div className={classes.loading}>\n                {/* <Typography>Loading...</Typography> */}\n                <CircularProgress color=\"primary\" size={30} />\n              </div>\n              <br />\n            </>\n          }\n          scrollableTarget=\"scrollable\"\n          scrollThreshold={0.2}\n        >\n          {content}\n        </InfiniteScroll>\n      </Box>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedRole: state.auth.selectedRole,\n  };\n};\n\nexport default connect(mapStateToProps)(AnnouncementSection);\n"]},"metadata":{},"sourceType":"module"}