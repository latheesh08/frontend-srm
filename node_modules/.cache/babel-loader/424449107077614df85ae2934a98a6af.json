{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/home/teacherHome/tasks/Tasks.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography, Box, Grid } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport TaskBookIcon from \"../../../../assets/images/home/teacher/TaskBook.svg\";\nimport TaskEditor from \"./TaskEditor\";\nimport TaskContent from \"./TaskContent\";\nimport HomeSerivce from \"../../HomeSerivce\";\nconst useStyle = makeStyles(theme => ({\n  taskDiv: {\n    height: \"100%\",\n    display: \"table\",\n    width: \"100%\"\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontWeight: 800,\n    letterSpacing: \"1px\",\n    color: `${theme.palette.common.bastille}`\n  },\n  taskIcon: {\n    transform: \"translateY(5px)\"\n  },\n  taskheader: {\n    width: \"100%\",\n    display: \"table-row\",\n    height: \"30px\"\n  },\n  tasks: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"table-row\"\n  },\n  addTaskIcon: {\n    float: \"right\",\n    cursor: \"pointer\",\n    bottom: 0\n  },\n  taskCard: {\n    borderRadius: \"10px\",\n    height: \"100%\"\n  },\n  loading: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    margin: \"auto\"\n  },\n  CardContent: {\n    padding: \"0 0 0 10px !important\",\n    margin: \"10px 0 0 0\",\n    height: \"345px\",\n    overflow: \"auto\",\n    \"&::-webkit-scrollbar\": {\n      width: \"0.4em\"\n    },\n    \"&::-webkit-scrollbar-track\": {\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.2)\",\n      outline: \"none\",\n      borderRadius: \"5px\"\n    },\n    \"&::-webkit-scrollbar-thumb\": {\n      backgroundColor: `${theme.palette.primary.main}`,\n      borderRadius: \"5px\"\n    },\n    \"& .taskContentDiv\": {\n      marginTop: \"10px\"\n    }\n  },\n  taskContentStyle: {\n    cursor: \"pointer\"\n  }\n}));\n\nconst Tasks = props => {\n  const classes = useStyle();\n  const [hasMore, setHasMore] = useState(true);\n  const [openEditor, setOpenEditor] = useState(false);\n  const [createNew, setCreateNew] = useState(false);\n  const [content, setContent] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n  const [taskId, setTaskId] = useState(null);\n\n  const handleCreateNew = event => {\n    setContent(\"\");\n    setTaskId(null);\n    setStatus(\"pending\");\n    setCreateNew(true);\n    setOpenEditor(true);\n  };\n\n  const handleEditTask = (id, taskContent, status) => {\n    setTaskId(id);\n    setContent(taskContent);\n    setStatus(status);\n    setCreateNew(false);\n    setOpenEditor(true);\n  };\n\n  const closeEditor = () => {\n    setOpenEditor(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.taskDiv,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.taskheader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: TaskBookIcon,\n    alt: \"Task Icon\",\n    className: classes.taskIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.titleName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"\\xA0Tasks\"), openEditor ? /*#__PURE__*/React.createElement(CancelIcon, {\n    color: \"primary\",\n    className: classes.addTaskIcon,\n    onClick: event => {\n      setOpenEditor(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(AddCircleRoundedIcon, {\n    color: \"primary\",\n    className: classes.addTaskIcon,\n    onClick: handleCreateNew,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.tasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.taskCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, openEditor ? /*#__PURE__*/React.createElement(TaskEditor, {\n    taskId: taskId,\n    content: content,\n    status: status,\n    closeEditor: closeEditor,\n    createNew: createNew,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(TaskContent, {\n    handleEditTask: handleEditTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Tasks;","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/home/teacherHome/tasks/Tasks.js"],"names":["React","useState","useEffect","makeStyles","Typography","Box","Grid","Card","CardContent","InfiniteScroll","AddCircleRoundedIcon","CancelIcon","TaskEditor","TaskContent","HomeSerivce","useStyle","theme","taskDiv","height","display","width","title","textTransform","fontWeight","letterSpacing","color","palette","common","bastille","taskIcon","transform","taskheader","tasks","addTaskIcon","float","cursor","bottom","taskCard","borderRadius","loading","textAlign","justifyContent","margin","padding","overflow","outline","backgroundColor","primary","main","marginTop","taskContentStyle","Tasks","props","classes","hasMore","setHasMore","openEditor","setOpenEditor","createNew","setCreateNew","content","setContent","status","setStatus","taskId","setTaskId","handleCreateNew","event","handleEditTask","id","taskContent","closeEditor","TaskBookIcon","titleName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Typography, Box, Grid } from \"@material-ui/core\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\nimport AddCircleRoundedIcon from \"@material-ui/icons/AddCircleRounded\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport TaskBookIcon from \"../../../../assets/images/home/teacher/TaskBook.svg\";\nimport TaskEditor from \"./TaskEditor\";\nimport TaskContent from \"./TaskContent\";\nimport HomeSerivce from \"../../HomeSerivce\";\n\nconst useStyle = makeStyles((theme) => ({\n  taskDiv: {\n    height: \"100%\",\n    display: \"table\",\n    width: \"100%\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n    fontWeight: 800,\n    letterSpacing: \"1px\",\n    color: `${theme.palette.common.bastille}`,\n  },\n  taskIcon: {\n    transform: \"translateY(5px)\",\n  },\n  taskheader: {\n    width: \"100%\",\n    display: \"table-row\",\n    height: \"30px\",\n  },\n  tasks: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"table-row\",\n  },\n  addTaskIcon: {\n    float: \"right\",\n    cursor: \"pointer\",\n    bottom: 0,\n  },\n  taskCard: {\n    borderRadius: \"10px\",\n    height: \"100%\",\n  },\n  loading: {\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    margin: \"auto\",\n  },\n  CardContent: {\n    padding: \"0 0 0 10px !important\",\n    margin: \"10px 0 0 0\",\n    height: \"345px\",\n    overflow: \"auto\",\n    \"&::-webkit-scrollbar\": {\n      width: \"0.4em\",\n    },\n    \"&::-webkit-scrollbar-track\": {\n      \"-webkit-box-shadow\": \"inset 0 0 6px rgba(0,0,0,0.2)\",\n      outline: \"none\",\n      borderRadius: \"5px\",\n    },\n    \"&::-webkit-scrollbar-thumb\": {\n      backgroundColor: `${theme.palette.primary.main}`,\n      borderRadius: \"5px\",\n    },\n    \"& .taskContentDiv\": {\n      marginTop: \"10px\",\n    },\n  },\n  taskContentStyle: {\n    cursor: \"pointer\",\n  },\n}));\nconst Tasks = (props) => {\n  const classes = useStyle();\n  const [hasMore, setHasMore] = useState(true);\n  const [openEditor, setOpenEditor] = useState(false);\n  const [createNew, setCreateNew] = useState(false);\n  const [content, setContent] = useState(\"\");\n  const [status, setStatus] = useState(\"pending\");\n  const [taskId, setTaskId] = useState(null);\n\n  const handleCreateNew = (event) => {\n    setContent(\"\");\n    setTaskId(null);\n    setStatus(\"pending\");\n    setCreateNew(true);\n    setOpenEditor(true);\n  };\n\n  const handleEditTask = (id, taskContent, status) => {\n    setTaskId(id);\n    setContent(taskContent);\n    setStatus(status);\n    setCreateNew(false);\n    setOpenEditor(true);\n  };\n\n  const closeEditor = () => {\n    setOpenEditor(false);\n  };\n\n  return (\n    <div className={classes.taskDiv}>\n      <div className={classes.taskheader}>\n        <Typography className={classes.title}>\n          <img\n            src={TaskBookIcon}\n            alt=\"Task Icon\"\n            className={classes.taskIcon}\n          />\n          <span className={classes.titleName}>&nbsp;Tasks</span>\n          {openEditor ? (\n            <CancelIcon\n              color=\"primary\"\n              className={classes.addTaskIcon}\n              onClick={(event) => {\n                setOpenEditor(false);\n              }}\n            />\n          ) : (\n            <AddCircleRoundedIcon\n              color=\"primary\"\n              className={classes.addTaskIcon}\n              onClick={handleCreateNew}\n            />\n          )}\n        </Typography>\n      </div>\n      <div className={classes.tasks}>\n        <Card className={classes.taskCard}>\n          {openEditor ? (\n            <TaskEditor\n              taskId={taskId}\n              content={content}\n              status={status}\n              closeEditor={closeEditor}\n              createNew={createNew}\n            />\n          ) : (\n            <TaskContent handleEditTask={handleEditTask} />\n          )}\n        </Card>\n      </div>\n    </div>\n  );\n};\n\nexport default Tasks;\n"]},"metadata":{},"sourceType":"module"}