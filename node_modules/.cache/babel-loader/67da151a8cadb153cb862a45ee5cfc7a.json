{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/auth/ChangePwd.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport AuthContainer from \"./AuthContainer\";\nimport AuthService from \"./AuthService\";\nimport passwordSvg from \"../../assets/images/Desktop Password.svg\";\nimport { Typography } from \"@material-ui/core\";\nimport SuccessDialog from \"./SuccessDialog\";\nconst useStyle = makeStyles(theme => ({\n  formStyle: {\n    margin: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    textAlign: \"center\"\n  },\n  fieldStyle: {\n    width: \"80%\",\n    margin: \"auto\",\n    \"& .MuiInput-underline:before\": {\n      borderBottom: \"2px solid #eaeaea\"\n    },\n    \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\n      borderBottom: \"2px solid #7B72AF\",\n      transitionProperty: \"border-bottom-color\",\n      transitionDuration: \"500ms\",\n      transitionTimingFunction: \"cubic-bezier(0.4, 0, 0.2, 1)\"\n    }\n  },\n  inputBorder: {\n    height: \"50px\"\n  },\n  errorColor: {\n    color: \"red\"\n  },\n  helperText: {\n    color: \"#f44336\",\n    display: \"none\"\n  },\n  margin: {\n    marginTop: \"30px\",\n    paddingBottom: \"20px\",\n    \"@media (max-width:400px)\": {\n      marginTop: \"10px\"\n    },\n    \"& .loginBtn\": {\n      borderRadius: \"6px\"\n    }\n  }\n}));\n\nconst ChangePwd = props => {\n  const [disableBtn, setDisableBtn] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n  const [mismatchErr, setMismatchErr] = useState(false);\n  const [errMessage, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(\"\");\n  const classes = useStyle();\n  const helperTextRef = useRef();\n  const history = useHistory();\n  useEffect(() => {\n    if (password === rePassword) {\n      setMismatchErr(false);\n      setDisableBtn(false);\n      helperTextRef.current.style.display = \"none\";\n    } else {\n      setMismatchErr(true);\n      setDisableBtn(true);\n      helperTextRef.current.style.display = \"block\";\n    }\n  }, [password, rePassword]);\n\n  const handleChangePassword = async event => {\n    event.preventDefault();\n    console.log(event);\n\n    if (password.length < 6) {\n      setError(\"Password should have more than 6 characters\");\n    } else {\n      try {\n        const Bearertoken = props.token;\n        const confirm_password = rePassword;\n        const response = await AuthService.changePassword(Bearertoken, {\n          new_password: password,\n          confirm_password: confirm_password\n        });\n        console.log(response);\n\n        if (response.data.message === \"Password updated successfully.\") {\n          history.push({\n            pathname: \"/login\",\n            search: `?fgtpass=true`\n          });\n        } else {\n          history.push({\n            pathname: \"/login\",\n            search: `?fgtpass=false`\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handlePassword = event => {\n    setError(\"\");\n    setPassword(event.target.value);\n  };\n\n  const handleConfirmPassword = event => {\n    setError(\"\");\n    setRePassword(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AuthContainer, {\n    title: \"Forgot Password ?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: `${classes.errorColor}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, errMessage), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.formStyle,\n    onSubmit: handleChangePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"password\",\n    className: classes.inputBorder,\n    type: \"password\",\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: passwordSvg,\n      width: \"40px\",\n      alt: \"Phone SVG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    })),\n    required: true,\n    value: password,\n    onChange: handlePassword,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"repassword\",\n    className: classes.inputBorder,\n    type: \"password\",\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: passwordSvg,\n      width: \"40px\",\n      alt: \"Phone SVG\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    })),\n    required: true,\n    value: rePassword,\n    onChange: handleConfirmPassword,\n    error: mismatchErr,\n    placeholder: \"Re-enter passoword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormHelperText, {\n    ref: helperTextRef,\n    className: classes.helperText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"*password not matching\"))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    type: \"submit\",\n    className: `${classes.fieldStyle} ${\"loginBtn\"}`,\n    color: \"primary\",\n    disableElevation: true,\n    disabled: disableBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, \"SUBMIT\"))))));\n};\n\nexport default ChangePwd;","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/auth/ChangePwd.js"],"names":["React","useState","useRef","useEffect","useHistory","Input","InputAdornment","Button","FormControl","FormHelperText","Box","makeStyles","AuthContainer","AuthService","Typography","SuccessDialog","useStyle","theme","formStyle","margin","width","justifyContent","textAlign","fieldStyle","borderBottom","transitionProperty","transitionDuration","transitionTimingFunction","inputBorder","height","errorColor","color","helperText","display","marginTop","paddingBottom","borderRadius","ChangePwd","props","disableBtn","setDisableBtn","password","setPassword","rePassword","setRePassword","mismatchErr","setMismatchErr","errMessage","setError","success","setSuccess","successMsg","setSuccessMsg","classes","helperTextRef","history","current","style","handleChangePassword","event","preventDefault","console","log","length","Bearertoken","token","confirm_password","response","changePassword","new_password","data","message","push","pathname","search","error","handlePassword","target","value","handleConfirmPassword","passwordSvg"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Button from \"@material-ui/core/Button\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport AuthContainer from \"./AuthContainer\";\nimport AuthService from \"./AuthService\";\nimport passwordSvg from \"../../assets/images/Desktop Password.svg\";\nimport { Typography } from \"@material-ui/core\";\nimport SuccessDialog from \"./SuccessDialog\";\n\nconst useStyle = makeStyles((theme) => ({\n  formStyle: {\n    margin: \"auto\",\n    width: \"100%\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n  },\n  fieldStyle: {\n    width: \"80%\",\n    margin: \"auto\",\n    \"& .MuiInput-underline:before\": {\n      borderBottom: \"2px solid #eaeaea\",\n    },\n    \"& .MuiInput-underline:hover:not(.Mui-disabled):before\": {\n      borderBottom: \"2px solid #7B72AF\",\n      transitionProperty: \"border-bottom-color\",\n      transitionDuration: \"500ms\",\n      transitionTimingFunction: \"cubic-bezier(0.4, 0, 0.2, 1)\",\n    },\n  },\n  inputBorder: {\n    height: \"50px\",\n  },\n  errorColor: {\n    color: \"red\",\n  },\n  helperText: {\n    color: \"#f44336\",\n    display: \"none\",\n  },\n  margin: {\n    marginTop: \"30px\",\n    paddingBottom: \"20px\",\n    \"@media (max-width:400px)\": {\n      marginTop: \"10px\",\n    },\n\n    \"& .loginBtn\": {\n      borderRadius: \"6px\",\n    },\n  },\n}));\n\nconst ChangePwd = (props) => {\n  const [disableBtn, setDisableBtn] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [rePassword, setRePassword] = useState(\"\");\n  const [mismatchErr, setMismatchErr] = useState(false);\n  const [errMessage, setError] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [successMsg, setSuccessMsg] = useState(\"\");\n\n  const classes = useStyle();\n  const helperTextRef = useRef();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (password === rePassword) {\n      setMismatchErr(false);\n      setDisableBtn(false);\n      helperTextRef.current.style.display = \"none\";\n    } else {\n      setMismatchErr(true);\n      setDisableBtn(true);\n      helperTextRef.current.style.display = \"block\";\n    }\n  }, [password, rePassword]);\n\n  const handleChangePassword = async (event) => {\n    event.preventDefault();\n    console.log(event);\n    if (password.length < 6) {\n      setError(\"Password should have more than 6 characters\");\n    } else {\n      try {\n        const Bearertoken = props.token;\n        const confirm_password = rePassword;\n        const response = await AuthService.changePassword(Bearertoken, {\n          new_password: password,\n          confirm_password: confirm_password,\n        });\n        console.log(response);\n        if (response.data.message === \"Password updated successfully.\") {\n          history.push({\n            pathname: \"/login\",\n            search: `?fgtpass=true`,\n          });\n        } else {\n          history.push({\n            pathname: \"/login\",\n            search: `?fgtpass=false`,\n          });\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const handlePassword = (event) => {\n    setError(\"\");\n    setPassword(event.target.value);\n  };\n  const handleConfirmPassword = (event) => {\n    setError(\"\");\n    setRePassword(event.target.value);\n  };\n\n  return (\n    <>\n      <AuthContainer title={\"Forgot Password ?\"}>\n        <div>\n          <Typography className={`${classes.errorColor}`}>\n            {errMessage}\n          </Typography>\n          <form className={classes.formStyle} onSubmit={handleChangePassword}>\n            <Box className={classes.margin}>\n              <FormControl className={classes.fieldStyle}>\n                <Input\n                  id=\"password\"\n                  className={classes.inputBorder}\n                  type=\"password\"\n                  startAdornment={\n                    <InputAdornment position=\"start\">\n                      <img src={passwordSvg} width=\"40px\" alt=\"Phone SVG\" />\n                    </InputAdornment>\n                  }\n                  required={true}\n                  value={password}\n                  onChange={handlePassword}\n                  placeholder=\"Password\"\n                />\n              </FormControl>\n            </Box>\n            <Box className={classes.margin}>\n              <FormControl className={classes.fieldStyle}>\n                <Input\n                  id=\"repassword\"\n                  className={classes.inputBorder}\n                  type=\"password\"\n                  startAdornment={\n                    <InputAdornment position=\"start\">\n                      <img src={passwordSvg} width=\"40px\" alt=\"Phone SVG\" />\n                    </InputAdornment>\n                  }\n                  required={true}\n                  value={rePassword}\n                  onChange={handleConfirmPassword}\n                  error={mismatchErr}\n                  placeholder=\"Re-enter passoword\"\n                />\n                <FormHelperText\n                  ref={helperTextRef}\n                  className={classes.helperText}\n                >\n                  *password not matching\n                </FormHelperText>\n              </FormControl>\n            </Box>\n            <Box className={classes.margin}>\n              <Button\n                variant=\"contained\"\n                type=\"submit\"\n                className={`${classes.fieldStyle} ${\"loginBtn\"}`}\n                color=\"primary\"\n                disableElevation\n                disabled={disableBtn}\n              >\n                SUBMIT\n              </Button>\n            </Box>\n          </form>\n        </div>\n      </AuthContainer>\n      {/* <SuccessDialog open={success} msg={successMsg} /> */}\n    </>\n  );\n};\n\nexport default ChangePwd;\n"]},"metadata":{},"sourceType":"module"}