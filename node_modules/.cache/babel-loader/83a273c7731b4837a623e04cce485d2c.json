{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/Assignment/teacher/CreateHomework.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'date-fns';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MuiPickersUtilsProvider, KeyboardDateTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport BackIcon from \"../../../assets/images/Back.svg\";\nimport RichTextEditor from '../../../shared/richTextEditor';\nimport PublishLater from './PublishLater';\nimport HomeworkService from '../HomeworkService';\nimport { set } from 'date-fns';\nconst useStyle = makeStyles(theme => ({\n  formStyle: {\n    margin: 'auto',\n    width: '95%',\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderRadius: '5px'\n  },\n  backImg: {\n    float: 'left',\n    paddingLeft: '10px',\n    cursor: 'pointer'\n  },\n  adornmentColor: {\n    color: `${theme.palette.common.adornment}`\n  },\n  themeColor: {\n    color: `${theme.palette.common.deluge}`,\n    padding: 0,\n    margin: 0\n  },\n  errorColor: {\n    color: 'red'\n  },\n  fieldStyle: {\n    width: '90%',\n    margin: 'auto',\n    '& .MuiInput-underline:before': {\n      borderBottom: '2px solid #eaeaea'\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: '2px solid #7B72AF',\n      transitionProperty: 'border-bottom-color',\n      transitionDuration: '500ms',\n      transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)'\n    }\n  },\n  inputBorder: {\n    height: '50px'\n  },\n  datePicker: {\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%'\n    }\n  },\n  paper: {\n    display: 'flex',\n    minHeight: '40px',\n    backgroundColor: 'none',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    border: `1px solid ${theme.palette.common.deluge}`,\n    padding: theme.spacing(0.5),\n    margin: 'auto'\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  paperBoxShadow: {\n    boxShadow: `2px 2px 2px 0 ${theme.palette.common.deluge} `\n  },\n  textAlignLeft: {\n    textAlign: 'left'\n  },\n  contentCenter: {\n    justifyContent: 'center'\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  margin: {\n    marginTop: '30px',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '10px'\n    },\n    '& .publishBtn': {\n      borderRadius: '3px',\n      width: 'inherit',\n      // opacity: '0.5',\n      marginBottom: '30px'\n    },\n    '& .publishLaterBtn': {\n      backgroundColor: `${theme.palette.common.white}`,\n      border: `1px solid ${theme.palette.common.adornment}`,\n      marginRight: '5px'\n    }\n  }\n}));\n\nconst CreateHomework = props => {\n  const classes = useStyle();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [scheduler, setScheduler] = useState(false);\n  const [openPubLater, setOpenPubLater] = useState(false);\n  const [eventDate, setEventDate] = useState(null);\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [description, setDescription] = useState('');\n  const [errMessage, setError] = useState('');\n  const [category, setCategory] = useState('');\n  const [submissionDate, setSubmissionDate] = useState();\n  const [checkState, setCheckState] = useState({ ...props.classState,\n    'Select All': false\n  });\n  const checkStateLength = [...Array(Object.keys(props.classState).length).keys()];\n  const [chipData, setChipData] = useState([]);\n  const selectAllObj = {\n    'Class 1': true,\n    'Class 2': true,\n    'Class 3': true,\n    'Class 4': true,\n    'Class 5': true,\n    'Class 6': true,\n    'Class 7': true,\n    'Class 8': true,\n    'Class 9': true,\n    'Class 10': true,\n    'Select All': true\n  };\n  const disSelectAllObj = {\n    'Class 1': false,\n    'Class 2': false,\n    'Class 3': false,\n    'Class 4': false,\n    'Class 5': false,\n    'Class 6': false,\n    'Class 7': false,\n    'Class 8': false,\n    'Class 9': false,\n    'Class 10': false,\n    'Select All': false\n  };\n  let saveDataApi;\n  useEffect(() => {\n    let isFormLoading = true; // give first api call to create\n    // api call to save\n\n    const fetchDraft = async () => {\n      try {\n        const response = await HomeworkService.fetchDraftHomework({\n          id\n        }, props.token);\n\n        if (response.status === 200) {\n          if (isFormLoading) {\n            let tempClassCheckState = {};\n\n            if (response.data.data.class_mapping) {\n              response.data.data.class_mapping.class.forEach(classId => {\n                tempClassCheckState[`Class ${classId}`] = true;\n                setChipData(chipData => [...chipData, `Class ${classId}`]);\n              });\n            }\n\n            setCheckState({ ...checkState,\n              ...tempClassCheckState\n            });\n            setDescription(response.data.data.main_content ? response.data.data.main_content : '');\n            setTitle(response.data.data.title ? response.data.data.title : ''); // setEventDate(response.data.data.submission_date);\n\n            setSubmissionDate(new Date(response.data.data.submission_date) || new Date());\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchDraft();\n    return () => {\n      isFormLoading = false; // clearInterval(saveDataApi);\n    };\n  }, []);\n  useEffect(() => {\n    const saveDetails = async () => {\n      try {\n        let classMapping = {\n          class: []\n        };\n\n        for (var state in checkState) {\n          if (state !== 'Select All') if (checkState[state] === true) {\n            // console.log('here', state);\n            classMapping.class.push(parseInt(state.split(' ')[1]));\n          }\n        }\n\n        const response = await HomeworkService.saveHomework({\n          id\n        }, {\n          title,\n          submission_date: eventDate,\n          main_content: description,\n          submission_date: submissionDate.toISOString(),\n          published_to: classMapping\n        }, props.token);\n\n        if (response.status === 200) {\n          console.log(response);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    saveDataApi = setInterval(() => {\n      // console.log(1);\n      saveDetails(title, eventDate, description, submissionDate, checkState);\n    }, 10000);\n    return () => clearInterval(saveDataApi);\n  }, [title, eventDate, description, submissionDate, checkState]);\n\n  const handleChangeInput = event => {\n    let name = event.target.name;\n\n    if (name === 'title') {\n      setTitle(event.target.value);\n    } else {\n      setSummary(event.target.value);\n    }\n  };\n\n  const handleEventDate = date => {\n    setEventDate(date);\n  };\n\n  const handleCheckbox = event => {\n    let name = event.target.name;\n\n    if (name === 'Select All') {\n      if (event.target.checked) {\n        setCheckState(selectAllObj);\n        setChipData(Object.keys(checkState));\n      } else {\n        setCheckState(disSelectAllObj);\n        setChipData([]);\n      }\n    } else {\n      setCheckState({ ...checkState,\n        [name]: event.target.checked\n      });\n\n      if (event.target.checked) {\n        setChipData([...chipData, name]);\n      } else {\n        setChipData(chipData.filter(e => e !== name));\n      }\n    }\n  };\n\n  const handleDescription = data => {\n    setDescription(data);\n  }; // const handlePublish = (event) => {\n  //   if (\n  //     chipData.length === 0 ||\n  //     title === \"\" ||\n  //     summary === \"\" ||\n  //     eventDate === null\n  //   ) {\n  //     setError(\"Fill All Data !\");\n  //   } else {\n  //     console.log(\"Submit Publish Now\");\n  //   }\n  // };\n\n\n  const handleOpenPubLater = event => {\n    if (chipData.length === 0 || title === '') {\n      setError('Fill All Data !');\n    } else {\n      setOpenPubLater(true);\n    }\n  };\n\n  const handleClosePubLater = () => {\n    setOpenPubLater(false);\n  };\n\n  const publishData = async (publisedDate, status) => {\n    try {\n      let classMapping = {\n        class: []\n      };\n\n      for (var state in checkState) {\n        if (state !== 'Select All') if (checkState[state] === true) {\n          classMapping.class.push(parseInt(state.split(' ')[1]));\n        }\n      } // console.log(classMapping, title, summary, eventDate, description);\n\n\n      const response = await HomeworkService.publishHomework({\n        id\n      }, {\n        title: title,\n        main_content: description,\n        status: status,\n        published_to: classMapping,\n        published_date: publisedDate,\n        submission_date: submissionDate.toISOString()\n      }, props.token); // console.log(response);\n\n      if (response.status === 200) {\n        console.log('Published'); // console.log(response);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handlesubmissionDate = date => {\n    setSubmissionDate(date);\n  };\n\n  const handlePublishLater = laterEventDate => {\n    // console.log(laterEventDate.toISOString());\n    const status = 'active';\n    publishData(laterEventDate.toISOString(), status);\n    history.goBack();\n  };\n\n  const submitForm = async event => {\n    event.preventDefault();\n    clearInterval(saveDataApi);\n    const status = 'published';\n    publishData(new Date().toISOString(), status);\n    history.goBack();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.formStyle,\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    pt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: BackIcon,\n    alt: \"Back\",\n    className: classes.backImg,\n    onClick: () => {\n      history.push('/assignment');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: `${classes.themeColor} ${classes.titleText}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 15\n    }\n  }, \"Create Homework\"))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    pt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: `${classes.errorColor}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }, errMessage))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    name: \"title\",\n    className: classes.inputBorder,\n    value: title,\n    onChange: handleChangeInput,\n    required: true,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.adornmentColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 21\n      }\n    }, \"Title\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDateTimePicker, {\n    id: \"eventDate\",\n    label: \"Submission Date\",\n    variant: \"inline\",\n    minDate: new Date(),\n    format: \"yyyy/MM/dd hh:mm a\",\n    value: submissionDate,\n    onChange: handlesubmissionDate,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    className: classes.datePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"ul\",\n    className: `${classes.paper} ${classes.fieldStyle}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    p: 3,\n    className: classes.adornmentColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 15\n    }\n  }, \"Show in:\"), chipData.map((data, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: data,\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: \"ul\",\n    className: `${classes.paper} ${classes.paperBoxShadow} ${classes.fieldStyle}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    className: classes.contentCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 17\n    }\n  }, checkStateLength.map((value, index) => {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: value,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: checkState[`Class ${value + 1}`],\n        onChange: handleCheckbox,\n        name: `Class ${value + 1}`,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 27\n        }\n      }),\n      label: `Class ${value + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 23\n      }\n    });\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: checkState['Select All'],\n      onChange: handleCheckbox,\n      name: \"Select All\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 23\n      }\n    }),\n    label: \"Select All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.textAlignLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(RichTextEditor, {\n    handleDescription: handleDescription,\n    value: description,\n    token: props.token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.textAlignLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"cancelBtn\",\n    variant: \"contained\",\n    onClick: () => {\n      history.push('/assignment');\n    },\n    className: `${classes.fieldStyle} ${'publishBtn'} ${'publishLaterBtn'}`,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"publishLaterBtn\",\n    variant: \"contained\",\n    onClick: handleOpenPubLater,\n    className: `${classes.fieldStyle} ${'publishBtn'} ${'publishLaterBtn'}`,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 17\n    }\n  }, \"Publish Later\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"publishBtn\",\n    variant: \"contained\",\n    className: `${classes.fieldStyle} ${'publishBtn'}`,\n    color: \"primary\" // onClick={handlePublish}\n    ,\n    type: \"submit\",\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 17\n    }\n  }, \"Publish Now\")))))), openPubLater ? /*#__PURE__*/React.createElement(PublishLater, {\n    open: openPubLater,\n    handleClose: handleClosePubLater,\n    handlePublishLater: handlePublishLater,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 558,\n      columnNumber: 9\n    }\n  }) : '');\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(CreateHomework);","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/Assignment/teacher/CreateHomework.js"],"names":["React","useState","useEffect","useHistory","useParams","connect","makeStyles","useTheme","Box","Grid","FormControl","Input","InputAdornment","Button","Typography","Paper","Chip","FormGroup","FormControlLabel","Checkbox","DateFnsUtils","Select","InputLabel","MenuItem","MuiPickersUtilsProvider","KeyboardDateTimePicker","KeyboardDatePicker","RichTextEditor","PublishLater","HomeworkService","set","useStyle","theme","formStyle","margin","width","backgroundColor","justifyContent","textAlign","borderRadius","backImg","float","paddingLeft","cursor","adornmentColor","color","palette","common","adornment","themeColor","deluge","padding","errorColor","fieldStyle","borderBottom","transitionProperty","transitionDuration","transitionTimingFunction","inputBorder","height","datePicker","breakpoints","down","paper","display","minHeight","flexWrap","listStyle","border","spacing","chip","paperBoxShadow","boxShadow","textAlignLeft","contentCenter","chips","marginTop","marginBottom","white","marginRight","CreateHomework","props","classes","history","id","scheduler","setScheduler","openPubLater","setOpenPubLater","eventDate","setEventDate","title","setTitle","summary","setSummary","description","setDescription","errMessage","setError","category","setCategory","submissionDate","setSubmissionDate","checkState","setCheckState","classState","checkStateLength","Array","Object","keys","length","chipData","setChipData","selectAllObj","disSelectAllObj","saveDataApi","isFormLoading","fetchDraft","response","fetchDraftHomework","token","status","tempClassCheckState","data","class_mapping","class","forEach","classId","main_content","Date","submission_date","e","console","log","saveDetails","classMapping","state","push","parseInt","split","saveHomework","toISOString","published_to","setInterval","clearInterval","handleChangeInput","event","name","target","value","handleEventDate","date","handleCheckbox","checked","filter","handleDescription","handleOpenPubLater","handleClosePubLater","publishData","publisedDate","publishHomework","published_date","handlesubmissionDate","handlePublishLater","laterEventDate","goBack","submitForm","preventDefault","BackIcon","titleText","map","index","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'date-fns';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDateTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BackIcon from '../../../assets/images/Back.svg';\nimport RichTextEditor from '../../../shared/richTextEditor';\nimport PublishLater from './PublishLater';\nimport HomeworkService from '../HomeworkService';\nimport { set } from 'date-fns';\n\nconst useStyle = makeStyles((theme) => ({\n  formStyle: {\n    margin: 'auto',\n    width: '95%',\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderRadius: '5px',\n  },\n  backImg: {\n    float: 'left',\n    paddingLeft: '10px',\n    cursor: 'pointer',\n  },\n  adornmentColor: {\n    color: `${theme.palette.common.adornment}`,\n  },\n  themeColor: {\n    color: `${theme.palette.common.deluge}`,\n    padding: 0,\n    margin: 0,\n  },\n  errorColor: {\n    color: 'red',\n  },\n  fieldStyle: {\n    width: '90%',\n    margin: 'auto',\n    '& .MuiInput-underline:before': {\n      borderBottom: '2px solid #eaeaea',\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: '2px solid #7B72AF',\n      transitionProperty: 'border-bottom-color',\n      transitionDuration: '500ms',\n      transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n  },\n  inputBorder: {\n    height: '50px',\n  },\n  datePicker: {\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  paper: {\n    display: 'flex',\n    minHeight: '40px',\n    backgroundColor: 'none',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    border: `1px solid ${theme.palette.common.deluge}`,\n    padding: theme.spacing(0.5),\n    margin: 'auto',\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  paperBoxShadow: {\n    boxShadow: `2px 2px 2px 0 ${theme.palette.common.deluge} `,\n  },\n  textAlignLeft: {\n    textAlign: 'left',\n  },\n  contentCenter: {\n    justifyContent: 'center',\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n\n  margin: {\n    marginTop: '30px',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '10px',\n    },\n    '& .publishBtn': {\n      borderRadius: '3px',\n      width: 'inherit',\n      // opacity: '0.5',\n      marginBottom: '30px',\n    },\n    '& .publishLaterBtn': {\n      backgroundColor: `${theme.palette.common.white}`,\n      border: `1px solid ${theme.palette.common.adornment}`,\n      marginRight: '5px',\n    },\n  },\n}));\n\nconst CreateHomework = (props) => {\n  const classes = useStyle();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [scheduler, setScheduler] = useState(false);\n  const [openPubLater, setOpenPubLater] = useState(false);\n  const [eventDate, setEventDate] = useState(null);\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [description, setDescription] = useState('');\n  const [errMessage, setError] = useState('');\n  const [category, setCategory] = useState('');\n  const [submissionDate, setSubmissionDate] = useState();\n  const [checkState, setCheckState] = useState({\n    ...props.classState,\n    'Select All': false,\n  });\n  const checkStateLength = [\n    ...Array(Object.keys(props.classState).length).keys(),\n  ];\n\n  const [chipData, setChipData] = useState([]);\n  const selectAllObj = {\n    'Class 1': true,\n    'Class 2': true,\n    'Class 3': true,\n    'Class 4': true,\n    'Class 5': true,\n    'Class 6': true,\n    'Class 7': true,\n    'Class 8': true,\n    'Class 9': true,\n    'Class 10': true,\n    'Select All': true,\n  };\n\n  const disSelectAllObj = {\n    'Class 1': false,\n    'Class 2': false,\n    'Class 3': false,\n    'Class 4': false,\n    'Class 5': false,\n    'Class 6': false,\n    'Class 7': false,\n    'Class 8': false,\n    'Class 9': false,\n    'Class 10': false,\n    'Select All': false,\n  };\n  let saveDataApi;\n  useEffect(() => {\n    let isFormLoading = true;\n    // give first api call to create\n\n    // api call to save\n    const fetchDraft = async () => {\n      try {\n        const response = await HomeworkService.fetchDraftHomework(\n          { id },\n          props.token\n        );\n        if (response.status === 200) {\n          if (isFormLoading) {\n            let tempClassCheckState = {};\n            if (response.data.data.class_mapping) {\n              response.data.data.class_mapping.class.forEach((classId) => {\n                tempClassCheckState[`Class ${classId}`] = true;\n\n                setChipData((chipData) => [...chipData, `Class ${classId}`]);\n              });\n            }\n            setCheckState({ ...checkState, ...tempClassCheckState });\n            setDescription(\n              response.data.data.main_content\n                ? response.data.data.main_content\n                : ''\n            );\n            setTitle(response.data.data.title ? response.data.data.title : '');\n            // setEventDate(response.data.data.submission_date);\n            setSubmissionDate(\n              new Date(response.data.data.submission_date) || new Date()\n            );\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchDraft();\n    return () => {\n      isFormLoading = false;\n      // clearInterval(saveDataApi);\n    };\n  }, []);\n  useEffect(() => {\n    const saveDetails = async () => {\n      try {\n        let classMapping = { class: [] };\n        for (var state in checkState) {\n          if (state !== 'Select All')\n            if (checkState[state] === true) {\n              // console.log('here', state);\n              classMapping.class.push(parseInt(state.split(' ')[1]));\n            }\n        }\n        const response = await HomeworkService.saveHomework(\n          { id },\n          {\n            title,\n            submission_date: eventDate,\n            main_content: description,\n            submission_date: submissionDate.toISOString(),\n            published_to: classMapping,\n          },\n          props.token\n        );\n\n        if (response.status === 200) {\n          console.log(response);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    saveDataApi = setInterval(() => {\n      // console.log(1);\n      saveDetails(title, eventDate, description, submissionDate, checkState);\n    }, 10000);\n    return () => clearInterval(saveDataApi);\n  }, [title, eventDate, description, submissionDate, checkState]);\n\n  const handleChangeInput = (event) => {\n    let name = event.target.name;\n    if (name === 'title') {\n      setTitle(event.target.value);\n    } else {\n      setSummary(event.target.value);\n    }\n  };\n\n  const handleEventDate = (date) => {\n    setEventDate(date);\n  };\n\n  const handleCheckbox = (event) => {\n    let name = event.target.name;\n    if (name === 'Select All') {\n      if (event.target.checked) {\n        setCheckState(selectAllObj);\n        setChipData(Object.keys(checkState));\n      } else {\n        setCheckState(disSelectAllObj);\n        setChipData([]);\n      }\n    } else {\n      setCheckState({ ...checkState, [name]: event.target.checked });\n\n      if (event.target.checked) {\n        setChipData([...chipData, name]);\n      } else {\n        setChipData(chipData.filter((e) => e !== name));\n      }\n    }\n  };\n\n  const handleDescription = (data) => {\n    setDescription(data);\n  };\n\n  // const handlePublish = (event) => {\n  //   if (\n  //     chipData.length === 0 ||\n  //     title === \"\" ||\n  //     summary === \"\" ||\n  //     eventDate === null\n  //   ) {\n  //     setError(\"Fill All Data !\");\n  //   } else {\n  //     console.log(\"Submit Publish Now\");\n  //   }\n  // };\n\n  const handleOpenPubLater = (event) => {\n    if (chipData.length === 0 || title === '') {\n      setError('Fill All Data !');\n    } else {\n      setOpenPubLater(true);\n    }\n  };\n\n  const handleClosePubLater = () => {\n    setOpenPubLater(false);\n  };\n\n  const publishData = async (publisedDate, status) => {\n    try {\n      let classMapping = { class: [] };\n      for (var state in checkState) {\n        if (state !== 'Select All')\n          if (checkState[state] === true) {\n            classMapping.class.push(parseInt(state.split(' ')[1]));\n          }\n      }\n      // console.log(classMapping, title, summary, eventDate, description);\n      const response = await HomeworkService.publishHomework(\n        { id },\n        {\n          title: title,\n          main_content: description,\n          status: status,\n          published_to: classMapping,\n          published_date: publisedDate,\n          submission_date: submissionDate.toISOString(),\n        },\n        props.token\n      );\n      // console.log(response);\n      if (response.status === 200) {\n        console.log('Published');\n        // console.log(response);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handlesubmissionDate = (date) => {\n    setSubmissionDate(date);\n  };\n\n  const handlePublishLater = (laterEventDate) => {\n    // console.log(laterEventDate.toISOString());\n    const status = 'active';\n    publishData(laterEventDate.toISOString(), status);\n    history.goBack();\n  };\n  const submitForm = async (event) => {\n    event.preventDefault();\n    clearInterval(saveDataApi);\n    const status = 'published';\n    publishData(new Date().toISOString(), status);\n    history.goBack();\n  };\n\n  return (\n    <>\n      <div>\n        <form className={classes.formStyle} onSubmit={submitForm}>\n          <Box className={classes.margin} pt={2}>\n            <div>\n              <img\n                src={BackIcon}\n                alt='Back'\n                className={classes.backImg}\n                onClick={() => {\n                  history.push('/assignment');\n                }}\n              />\n              <Typography\n                variant='h5'\n                className={`${classes.themeColor} ${classes.titleText}`}\n              >\n                Create Homework\n              </Typography>\n            </div>\n          </Box>\n          <Box className={classes.margin} pt={2}>\n            <div>\n              <Typography className={`${classes.errorColor}`}>\n                {errMessage}\n              </Typography>\n            </div>\n          </Box>\n          <Box className={classes.margin}>\n            <FormControl className={classes.fieldStyle}>\n              <Input\n                id='title'\n                name='title'\n                className={classes.inputBorder}\n                value={title}\n                onChange={handleChangeInput}\n                required={true}\n                startAdornment={\n                  <InputAdornment position='start'>\n                    <Typography className={classes.adornmentColor}>\n                      Title\n                    </Typography>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </Box>\n          <Box className={classes.margin}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container className={classes.fieldStyle}>\n                <Grid item xs={12}>\n                  <KeyboardDateTimePicker\n                    id='eventDate'\n                    label='Submission Date'\n                    variant='inline'\n                    minDate={new Date()}\n                    format='yyyy/MM/dd hh:mm a'\n                    value={submissionDate}\n                    onChange={handlesubmissionDate}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                    className={classes.datePicker}\n                  />\n                </Grid>\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </Box>\n          <Box className={classes.margin}>\n            <Box\n              component='ul'\n              className={`${classes.paper} ${classes.fieldStyle}`}\n            >\n              <Typography variant='h6' p={3} className={classes.adornmentColor}>\n                Show in:\n              </Typography>\n              {chipData.map((data, index) => {\n                return (\n                  <li key={index}>\n                    <Chip label={data} className={classes.chip} />\n                  </li>\n                );\n              })}\n            </Box>\n          </Box>\n          <Box mt={1}>\n            <Paper\n              component='ul'\n              className={`${classes.paper} ${classes.paperBoxShadow} ${classes.fieldStyle}`}\n            >\n              <FormControl>\n                <FormGroup row className={classes.contentCenter}>\n                  {checkStateLength.map((value, index) => {\n                    return (\n                      <FormControlLabel\n                        key={value}\n                        control={\n                          <Checkbox\n                            checked={checkState[`Class ${value + 1}`]}\n                            onChange={handleCheckbox}\n                            name={`Class ${value + 1}`}\n                            color='primary'\n                          />\n                        }\n                        label={`Class ${value + 1}`}\n                      />\n                    );\n                  })}\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={checkState['Select All']}\n                        onChange={handleCheckbox}\n                        name='Select All'\n                        color='primary'\n                      />\n                    }\n                    label='Select All'\n                  />\n                </FormGroup>\n              </FormControl>\n            </Paper>\n          </Box>\n          <Box className={classes.margin}>\n            <Grid className={classes.fieldStyle}>\n              <Typography variant='h6' className={classes.textAlignLeft}>\n                Description\n              </Typography>\n              <RichTextEditor\n                handleDescription={handleDescription}\n                value={description}\n                token={props.token}\n              />\n            </Grid>\n          </Box>\n          <Box className={classes.margin}>\n            <Grid container spacing={3} className={classes.fieldStyle}>\n              <Grid item xs={6} className={classes.textAlignLeft}>\n                <Button\n                  id='cancelBtn'\n                  variant='contained'\n                  onClick={() => {\n                    history.push('/assignment');\n                  }}\n                  className={`${\n                    classes.fieldStyle\n                  } ${'publishBtn'} ${'publishLaterBtn'}`}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </Grid>\n              <Grid item xs={6}>\n                <Button\n                  id='publishLaterBtn'\n                  variant='contained'\n                  onClick={handleOpenPubLater}\n                  className={`${\n                    classes.fieldStyle\n                  } ${'publishBtn'} ${'publishLaterBtn'}`}\n                  disableElevation\n                >\n                  Publish Later\n                </Button>\n                <Button\n                  id='publishBtn'\n                  variant='contained'\n                  className={`${classes.fieldStyle} ${'publishBtn'}`}\n                  color='primary'\n                  // onClick={handlePublish}\n                  type='submit'\n                  disableElevation\n                >\n                  Publish Now\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </form>\n      </div>\n      {openPubLater ? (\n        <PublishLater\n          open={openPubLater}\n          handleClose={handleClosePubLater}\n          handlePublishLater={handlePublishLater}\n        />\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n  };\n};\n\nexport default connect(mapStateToProps)(CreateHomework);\n"]},"metadata":{},"sourceType":"module"}