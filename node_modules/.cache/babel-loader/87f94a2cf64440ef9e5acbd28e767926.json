{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/gallery/ImageUpload.js\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nconst BACKEND_API_URL = process.env.REACT_APP_BACKEND_API_URL;\nconst useStyles = makeStyles(theme => ({\n  snackBar: {\n    \"&.MuiSnackbar-root\": {\n      zIndex: theme.zIndex.drawer + 1,\n      maxWidth: \"400px\"\n    }\n  },\n  previewChip: {\n    minWidth: 160,\n    maxWidth: 210\n  }\n}));\n\nconst ImageUpload = props => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [fileList, setFileList] = useState([]);\n\n  const handleChange = files => {\n    setFileList(files);\n  };\n\n  const toBase64 = file => new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = error => reject(error);\n  });\n\n  const handleUpload = async () => {\n    console.log(); // console.log(await toBase64(fileList[0]));\n\n    const base = await toBase64(fileList[0]);\n    const token = localStorage.getItem(\"srmToken\"); // const response = await axios.post(\n    //   `${BACKEND_API_URL}/feed-gallery`,\n    //   {\n    //     file: `data:image/png;base64,${blobInfo.base64()}`,\n    //     type: \"news\",\n    //   },\n    //   {\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       Authorization: `Bearer ${props.token}`,\n    //     },\n    //   }\n    // );\n  };\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: \"10px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropzoneArea, {\n    onChange: handleChange,\n    alertSnackbarProps: {\n      anchorOrigin: {\n        vertical: \"bottom\",\n        horizontal: \"center\"\n      },\n      classes: {\n        root: classes.snackBar\n      },\n      autoHideDuration: 3000\n    },\n    acceptedFiles: [\"image/*\"],\n    maxFileSize: 10000000,\n    filesLimit: 10,\n    showPreviews: true,\n    showPreviewsInDropzone: false,\n    useChipsForPreview: true,\n    previewGridProps: {\n      container: {\n        spacing: 1,\n        direction: \"row\"\n      }\n    },\n    previewChipProps: {\n      classes: {\n        root: classes.previewChip\n      }\n    },\n    previewText: \"Selected files\",\n    dropzoneText: \"Drag and drop a file (max 10 MB each) here or click\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleUpload,\n    disabled: fileList.length === 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    fullWidth: true,\n    onClick: handleCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, \"Cancel\"))));\n};\n\nexport default ImageUpload;","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/gallery/ImageUpload.js"],"names":["React","useState","useHistory","makeStyles","DropzoneArea","Button","axios","BACKEND_API_URL","process","env","REACT_APP_BACKEND_API_URL","useStyles","theme","snackBar","zIndex","drawer","maxWidth","previewChip","minWidth","ImageUpload","props","classes","history","fileList","setFileList","handleChange","files","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","handleUpload","console","log","base","token","localStorage","getItem","handleCancel","goBack","margin","anchorOrigin","vertical","horizontal","root","autoHideDuration","container","spacing","direction","height","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DropzoneArea } from \"material-ui-dropzone\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nconst BACKEND_API_URL = process.env.REACT_APP_BACKEND_API_URL;\nconst useStyles = makeStyles((theme) => ({\n  snackBar: {\n    \"&.MuiSnackbar-root\": {\n      zIndex: theme.zIndex.drawer + 1,\n      maxWidth: \"400px\",\n    },\n  },\n  previewChip: {\n    minWidth: 160,\n    maxWidth: 210,\n  },\n}));\n\nconst ImageUpload = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [fileList, setFileList] = useState([]);\n\n  const handleChange = (files) => {\n    setFileList(files);\n  };\n  const toBase64 = (file) =>\n    new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => resolve(reader.result);\n      reader.onerror = (error) => reject(error);\n    });\n\n  const handleUpload = async () => {\n    console.log();\n    // console.log(await toBase64(fileList[0]));\n    const base=await toBase64(fileList[0])\n    const token = localStorage.getItem(\"srmToken\");\n    // const response = await axios.post(\n    //   `${BACKEND_API_URL}/feed-gallery`,\n    //   {\n    //     file: `data:image/png;base64,${blobInfo.base64()}`,\n    //     type: \"news\",\n    //   },\n    //   {\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       Authorization: `Bearer ${props.token}`,\n    //     },\n    //   }\n    // );\n  };\n\n  const handleCancel = () => {\n    history.goBack();\n  };\n\n  return (\n    <>\n      <div style={{ margin: \"10px\" }}>\n        <div>\n          <DropzoneArea\n            onChange={handleChange}\n            alertSnackbarProps={{\n              anchorOrigin: { vertical: \"bottom\", horizontal: \"center\" },\n              classes: { root: classes.snackBar },\n              autoHideDuration: 3000,\n            }}\n            acceptedFiles={[\"image/*\"]}\n            maxFileSize={10000000}\n            filesLimit={10}\n            showPreviews={true}\n            showPreviewsInDropzone={false}\n            useChipsForPreview\n            previewGridProps={{ container: { spacing: 1, direction: \"row\" } }}\n            previewChipProps={{ classes: { root: classes.previewChip } }}\n            previewText=\"Selected files\"\n            dropzoneText=\"Drag and drop a file (max 10 MB each) here or click\"\n          />\n        </div>\n        <div style={{ height: \"40px\" }}></div>\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            onClick={handleUpload}\n            disabled={fileList.length === 0}\n          >\n            Upload\n          </Button>\n        </div>\n        <div style={{ height: \"20px\" }}></div>\n        <div>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            fullWidth\n            onClick={handleCancel}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ImageUpload;\n"]},"metadata":{},"sourceType":"module"}