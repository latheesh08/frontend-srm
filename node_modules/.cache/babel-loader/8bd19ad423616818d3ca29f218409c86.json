{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/Assignment/AnnouncementSection.js\";\nimport 'date-fns';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport HomeworkService from './HomeworkService';\nimport AddIcon from \"../../assets/images/Add.svg\";\nimport AnnouncementCard from '../home/studentHome/AnnouncementCard';\nimport NewsCard from './teacher/NewsCard';\nconst useStyles = makeStyles(theme => ({\n  datePicker: {\n    width: '25%',\n    paddingRight: '10px'\n  },\n  sectionContainer: {\n    height: '100%',\n    width: '100%'\n  },\n  header: {\n    paddingRight: '15px',\n    paddingLeft: '15px',\n    paddingTop: '10px',\n    display: 'inline block'\n  },\n  cardBoxPadding: {\n    padding: '24px',\n    [theme.breakpoints.down('sm')]: {\n      padding: '16px'\n    }\n  },\n  addNew: {\n    color: theme.palette.common.deluge,\n    float: 'right',\n    marginTop: '15px',\n    marginRight: '15px',\n    cursor: 'pointer',\n    '& .new': {\n      float: 'right',\n      fontSize: '14px',\n      padding: '5px'\n    },\n    '& img': {\n      margin: '5px',\n      height: '20px',\n      cursor: 'pointer'\n    }\n  },\n  loading: {\n    width: '100%',\n    textAlign: 'center',\n    paddingTop: '8px',\n    fontSize: '20px'\n  }\n}));\n\nconst AnnouncementSection = props => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [selectedFromDate, setFromDate] = useState(null);\n  const [selectedToDate, setToDate] = useState(null);\n  const selectedRole = props.selectedRole;\n  const [hasMore, setHasMore] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [announcements, setAnnouncements] = useState([]); // const [isAnnouncementLoading, setIsAnnouncementLoading] = useState(true);\n\n  useEffect(() => {\n    let isAnnouncementLoading = true;\n\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('srmToken');\n        const selectedRole = props.selectedRole;\n        const response = await HomeworkService.fetchAnnouncements({\n          selectedRole,\n          currentPage\n        }, token);\n\n        if (response.status === 200) {\n          if (response.data.data.current_page === response.data.data.last_page) {\n            if (isAnnouncementLoading) {\n              setAnnouncements([...announcements, ...response.data.data.data]);\n              setHasMore(false);\n            }\n          } else {\n            if (isAnnouncementLoading) {\n              setAnnouncements([...announcements, ...response.data.data.data]);\n              setCurrentPage(currentPage + 1);\n            }\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchData();\n    return () => {\n      isAnnouncementLoading = false;\n    };\n  }, []);\n\n  const fetchAnnouncementOnScroll = async () => {\n    try {\n      const token = localStorage.getItem('srmToken');\n      const selectedRole = props.selectedRole;\n      const response = await HomeworkService.fetchAnnouncements({\n        selectedRole,\n        currentPage\n      }, token);\n\n      if (response.status === 200) {\n        // console.log(response);\n        if (response.data.data.current_page !== response.data.data.last_page) {\n          setAnnouncements([...announcements, ...response.data.data.data]);\n          setCurrentPage(currentPage + 1);\n        } else {\n          setAnnouncements([...announcements, ...response.data.data.data]);\n          setHasMore(false);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFromDateChange = date => {\n    setFromDate(date);\n  };\n\n  const handleToDateChange = date => {\n    setToDate(date);\n  };\n\n  const handleCreateAnnouncement = async () => {\n    try {\n      const token = localStorage.getItem('srmToken');\n      const response = await HomeworkService.createAnnouncement(token); // console.log(response);\n\n      history.push(`/create-homework/${response.data.homework_id}`); // history.push(`/create-announcement/${65}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  let content = announcements.map((announcement, index) => {\n    return /*#__PURE__*/React.createElement(NewsCard, {\n      key: announcement.id,\n      announcement: announcement,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 12\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sectionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.filterForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    format: \"MM/dd/yyyy\",\n    id: \"fromDate\",\n    label: \"From\",\n    variant: \"inline\",\n    value: selectedFromDate,\n    onChange: handleFromDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    className: classes.datePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    disableToolbar: true,\n    id: \"toDate\",\n    label: \"To\",\n    variant: \"inline\",\n    format: \"MM/dd/yyyy\",\n    value: selectedToDate,\n    onChange: handleToDateChange,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    className: classes.datePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  })), selectedRole === 'teacher' || selectedRole === 'admin' ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.addNew,\n    onClick: handleCreateAnnouncement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: AddIcon,\n    alt: \"add\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"new\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"New\")) : '')), /*#__PURE__*/React.createElement(Box, {\n    className: classes.cardBoxPadding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: announcements.length,\n    next: fetchAnnouncementOnScroll,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"primary\",\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    })),\n    scrollableTarget: \"scrollable\",\n    scrollThreshold: 0.2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }\n  }, content), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    selectedRole: state.auth.selectedRole\n  };\n};\n\nexport default connect(mapStateToProps)(AnnouncementSection);","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/Assignment/AnnouncementSection.js"],"names":["React","useState","useRef","useEffect","connect","useHistory","makeStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardDatePicker","Box","Typography","CircularProgress","InfiniteScroll","HomeworkService","AnnouncementCard","NewsCard","useStyles","theme","datePicker","width","paddingRight","sectionContainer","height","header","paddingLeft","paddingTop","display","cardBoxPadding","padding","breakpoints","down","addNew","color","palette","common","deluge","float","marginTop","marginRight","cursor","fontSize","margin","loading","textAlign","AnnouncementSection","props","classes","history","selectedFromDate","setFromDate","selectedToDate","setToDate","selectedRole","hasMore","setHasMore","currentPage","setCurrentPage","announcements","setAnnouncements","isAnnouncementLoading","fetchData","token","localStorage","getItem","response","fetchAnnouncements","status","data","current_page","last_page","e","console","log","fetchAnnouncementOnScroll","error","handleFromDateChange","date","handleToDateChange","handleCreateAnnouncement","createAnnouncement","push","homework_id","content","map","announcement","index","id","filterForm","AddIcon","length","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import 'date-fns';\nimport React, { useState, useRef, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/styles';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Box from '@material-ui/core/Box';\nimport { Typography } from '@material-ui/core';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport HomeworkService from './HomeworkService';\nimport AddIcon from '../../assets/images/Add.svg';\nimport AnnouncementCard from '../home/studentHome/AnnouncementCard';\nimport NewsCard from './teacher/NewsCard';\n\nconst useStyles = makeStyles((theme) => ({\n  datePicker: {\n    width: '25%',\n    paddingRight: '10px',\n  },\n  sectionContainer: {\n    height: '100%',\n    width: '100%',\n  },\n\n  header: {\n    paddingRight: '15px',\n    paddingLeft: '15px',\n    paddingTop: '10px',\n    display: 'inline block',\n  },\n  cardBoxPadding: {\n    padding: '24px',\n    [theme.breakpoints.down('sm')]: {\n      padding: '16px',\n    },\n  },\n  addNew: {\n    color: theme.palette.common.deluge,\n    float: 'right',\n    marginTop: '15px',\n    marginRight: '15px',\n    cursor: 'pointer',\n    '& .new': {\n      float: 'right',\n      fontSize: '14px',\n      padding: '5px',\n    },\n    '& img': {\n      margin: '5px',\n      height: '20px',\n      cursor: 'pointer',\n    },\n  },\n  loading: {\n    width: '100%',\n    textAlign: 'center',\n    paddingTop: '8px',\n    fontSize: '20px',\n  },\n}));\n\nconst AnnouncementSection = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [selectedFromDate, setFromDate] = useState(null);\n  const [selectedToDate, setToDate] = useState(null);\n  const selectedRole = props.selectedRole;\n  const [hasMore, setHasMore] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [announcements, setAnnouncements] = useState([]);\n\n  // const [isAnnouncementLoading, setIsAnnouncementLoading] = useState(true);\n  useEffect(() => {\n    let isAnnouncementLoading = true;\n    const fetchData = async () => {\n      try {\n        const token = localStorage.getItem('srmToken');\n        const selectedRole = props.selectedRole;\n        const response = await HomeworkService.fetchAnnouncements(\n          { selectedRole, currentPage },\n          token\n        );\n        if (response.status === 200) {\n          if (\n            response.data.data.current_page === response.data.data.last_page\n          ) {\n            if (isAnnouncementLoading) {\n              setAnnouncements([...announcements, ...response.data.data.data]);\n              setHasMore(false);\n            }\n          } else {\n            if (isAnnouncementLoading) {\n              setAnnouncements([...announcements, ...response.data.data.data]);\n              setCurrentPage(currentPage + 1);\n            }\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchData();\n\n    return () => {\n      isAnnouncementLoading = false;\n    };\n  }, []);\n\n  const fetchAnnouncementOnScroll = async () => {\n    try {\n      const token = localStorage.getItem('srmToken');\n      const selectedRole = props.selectedRole;\n      const response = await HomeworkService.fetchAnnouncements(\n        { selectedRole, currentPage },\n        token\n      );\n\n      if (response.status === 200) {\n        // console.log(response);\n        if (response.data.data.current_page !== response.data.data.last_page) {\n          setAnnouncements([...announcements, ...response.data.data.data]);\n          setCurrentPage(currentPage + 1);\n        } else {\n          setAnnouncements([...announcements, ...response.data.data.data]);\n          setHasMore(false);\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleFromDateChange = (date) => {\n    setFromDate(date);\n  };\n  const handleToDateChange = (date) => {\n    setToDate(date);\n  };\n  const handleCreateAnnouncement = async () => {\n    try {\n      const token = localStorage.getItem('srmToken');\n      const response = await HomeworkService.createAnnouncement(token);\n      // console.log(response);\n      history.push(`/create-homework/${response.data.homework_id}`);\n      // history.push(`/create-announcement/${65}`);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  let content = announcements.map((announcement, index) => {\n    return <NewsCard key={announcement.id} announcement={announcement} />;\n  });\n\n  return (\n    <div className={classes.sectionContainer}>\n      <div className={classes.header}>\n        <div className={classes.filterForm}>\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <KeyboardDatePicker\n              disableToolbar\n              format='MM/dd/yyyy'\n              id='fromDate'\n              label='From'\n              variant='inline'\n              value={selectedFromDate}\n              onChange={handleFromDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n              className={classes.datePicker}\n            />\n            <KeyboardDatePicker\n              disableToolbar\n              id='toDate'\n              label='To'\n              variant='inline'\n              format='MM/dd/yyyy'\n              value={selectedToDate}\n              onChange={handleToDateChange}\n              KeyboardButtonProps={{\n                'aria-label': 'change date',\n              }}\n              className={classes.datePicker}\n            />\n          </MuiPickersUtilsProvider>\n          {selectedRole === 'teacher' || selectedRole === 'admin' ? (\n            <div className={classes.addNew} onClick={handleCreateAnnouncement}>\n              <img src={AddIcon} alt='add' />\n              <Typography className='new'>New</Typography>\n            </div>\n          ) : (\n            ''\n          )}\n        </div>\n      </div>\n      <Box className={classes.cardBoxPadding}>\n        <InfiniteScroll\n          dataLength={announcements.length}\n          next={fetchAnnouncementOnScroll}\n          hasMore={hasMore}\n          loader={\n            <>\n              <div className={classes.loading}>\n                {/* <Typography>Loading...</Typography> */}\n                <CircularProgress color='primary' size={30} />\n              </div>\n              <br />\n            </>\n          }\n          scrollableTarget='scrollable'\n          scrollThreshold={0.2}\n        >\n          {content}\n        </InfiniteScroll>\n        <br />\n        <br />\n        <br />\n      </Box>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    selectedRole: state.auth.selectedRole,\n  };\n};\n\nexport default connect(mapStateToProps)(AnnouncementSection);\n"]},"metadata":{},"sourceType":"module"}