{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/newsAnnouncement/teacher/CreateAnnouncement.js\";\nimport React, { useState, useEffect } from 'react';\nimport 'date-fns';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport BackIcon from \"../../../assets/images/Back.svg\";\nimport RichTextEditor from '../../../shared/richTextEditor';\nimport PublishLater from './PublishLater';\nimport AnnouncementService from '../AnnouncementService';\nimport { set } from 'date-fns';\nconst useStyle = makeStyles(theme => ({\n  formStyle: {\n    margin: 'auto',\n    width: '95%',\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderRadius: '5px'\n  },\n  backImg: {\n    float: 'left',\n    paddingLeft: '10px',\n    cursor: 'pointer'\n  },\n  adornmentColor: {\n    color: `${theme.palette.common.adornment}`\n  },\n  themeColor: {\n    color: `${theme.palette.common.deluge}`,\n    padding: 0,\n    margin: 0\n  },\n  errorColor: {\n    color: 'red'\n  },\n  fieldStyle: {\n    width: '90%',\n    margin: 'auto',\n    '& .MuiInput-underline:before': {\n      borderBottom: '2px solid #eaeaea'\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: '2px solid #7B72AF',\n      transitionProperty: 'border-bottom-color',\n      transitionDuration: '500ms',\n      transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)'\n    }\n  },\n  inputBorder: {\n    height: '50px'\n  },\n  datePicker: {\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%'\n    }\n  },\n  paper: {\n    display: 'flex',\n    minHeight: '40px',\n    backgroundColor: 'none',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    border: `1px solid ${theme.palette.common.deluge}`,\n    padding: theme.spacing(0.5),\n    margin: 'auto'\n  },\n  chip: {\n    margin: theme.spacing(0.5)\n  },\n  paperBoxShadow: {\n    boxShadow: `2px 2px 2px 0 ${theme.palette.common.deluge} `\n  },\n  textAlignLeft: {\n    textAlign: 'left'\n  },\n  contentCenter: {\n    justifyContent: 'center'\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: 2\n  },\n  margin: {\n    marginTop: '30px',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '10px'\n    },\n    '& .publishBtn': {\n      borderRadius: '3px',\n      width: 'inherit',\n      // opacity: '0.5',\n      marginBottom: '30px'\n    },\n    '& .publishLaterBtn': {\n      backgroundColor: `${theme.palette.common.white}`,\n      border: `1px solid ${theme.palette.common.adornment}`,\n      marginRight: '5px'\n    }\n  }\n}));\n\nconst CreateAnnouncement = props => {\n  const classes = useStyle();\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [scheduler, setScheduler] = useState(false);\n  const [openPubLater, setOpenPubLater] = useState(false);\n  const [eventDate, setEventDate] = useState(null);\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [description, setDescription] = useState('');\n  const [errMessage, setError] = useState('');\n  const [category, setCategory] = useState('');\n  const [checkState, setCheckState] = useState({ ...props.classState,\n    'All Teachers': false,\n    'All Parents': false,\n    'Select All': false\n  });\n  const categoryValues = [...Object.values(props.categories)];\n  const checkStateLength = [...Array(Object.keys(props.classState).length).keys()];\n  const [chipData, setChipData] = useState([]);\n  const selectAllObj = {\n    'Class 1': true,\n    'Class 2': true,\n    'Class 3': true,\n    'Class 4': true,\n    'Class 5': true,\n    'Class 6': true,\n    'Class 7': true,\n    'Class 8': true,\n    'Class 9': true,\n    'Class 10': true,\n    'All Teachers': true,\n    'All Parents': true,\n    'Select All': true\n  };\n  const disSelectAllObj = {\n    'Class 1': false,\n    'Class 2': false,\n    'Class 3': false,\n    'Class 4': false,\n    'Class 5': false,\n    'Class 6': false,\n    'Class 7': false,\n    'Class 8': false,\n    'Class 9': false,\n    'Class 10': false,\n    'All Teachers': false,\n    'All Parents': false,\n    'Select All': false\n  };\n  let saveDataApi;\n  useEffect(() => {\n    let isFormLoading = true; // give first api call to create\n    // api call to save\n\n    const fetchDraft = async () => {\n      try {\n        const response = await AnnouncementService.fetchDraftAnnouncement({\n          id\n        }, props.token);\n\n        if (response.status === 200) {\n          if (isFormLoading) {\n            let tempClassCheckState = {};\n\n            if (response.data.data.class_mapping) {\n              if (response.data.data.class_mapping.parents) {\n                tempClassCheckState['All Parents'] = true;\n                setChipData([...chipData, 'All Parents']);\n              }\n\n              if (response.data.data.class_mapping.teachers) {\n                tempClassCheckState['All Teachers'] = true;\n                setChipData([...chipData, 'All Teachers']);\n              }\n\n              response.data.data.class_mapping.class.forEach(classId => {\n                tempClassCheckState[`Class ${classId}`] = true;\n                setChipData(chipData => [...chipData, `Class ${classId}`]);\n              });\n            }\n\n            setCheckState({ ...checkState,\n              ...tempClassCheckState\n            });\n            setDescription(response.data.data.main_content ? response.data.data.main_content : '');\n            setTitle(response.data.data.title ? response.data.data.title : '');\n            setSummary(response.data.data.summary ? response.data.data.summary : '');\n            setEventDate(response.data.data.event_date);\n            setCategory(props.categories[response.data.data.category_id] ? props.categories[response.data.data.category_id] : '');\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    fetchDraft();\n    return () => {\n      isFormLoading = false; // clearInterval(saveDataApi);\n    };\n  }, []);\n  useEffect(() => {\n    const saveDetails = async () => {\n      try {\n        let classMapping = {\n          class: []\n        };\n\n        for (var state in checkState) {\n          if (state !== 'All Parents' && state !== 'All Teachers' && state !== 'Select All') if (checkState[state] === true) {\n            classMapping.class.push(parseInt(state.split(' ')[1]));\n          }\n        }\n\n        if (checkState['All Parents'] === true) {\n          classMapping['parents'] = true;\n        }\n\n        if (checkState['All Teachers'] === true) {\n          classMapping['teachers'] = true;\n        }\n\n        const response = await AnnouncementService.saveAnnouncement({\n          id\n        }, {\n          title,\n          summary,\n          event_date: eventDate,\n          main_content: description,\n          published_to: classMapping,\n          category_id: parseInt(Object.keys(props.categories).find(category_id => props.categories[category_id] === category))\n        }, props.token);\n\n        if (response.status === 200) {\n          console.log(response);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n\n    saveDataApi = setInterval(() => {\n      // console.log(1);\n      saveDetails();\n    }, 10000);\n    return () => clearInterval(saveDataApi);\n  }, [title, eventDate, description, summary, checkState, category]);\n\n  const handleChangeInput = event => {\n    let name = event.target.name;\n\n    if (name === 'title') {\n      setTitle(event.target.value);\n    } else {\n      setSummary(event.target.value);\n    }\n  };\n\n  const handleEventDate = date => {\n    setEventDate(date);\n  };\n\n  const handleCheckbox = event => {\n    let name = event.target.name;\n\n    if (name === 'Select All') {\n      if (event.target.checked) {\n        setCheckState(selectAllObj);\n        setChipData(Object.keys(checkState));\n      } else {\n        setCheckState(disSelectAllObj);\n        setChipData([]);\n      }\n    } else {\n      setCheckState({ ...checkState,\n        [name]: event.target.checked\n      });\n\n      if (event.target.checked) {\n        setChipData([...chipData, name]);\n      } else {\n        setChipData(chipData.filter(e => e !== name));\n      }\n    }\n  };\n\n  const handleDescription = data => {\n    setDescription(data);\n  };\n\n  const handleCategoryChange = event => {\n    setCategory(event.target.value);\n  }; // const handlePublish = (event) => {\n  //   if (\n  //     chipData.length === 0 ||\n  //     title === \"\" ||\n  //     summary === \"\" ||\n  //     eventDate === null\n  //   ) {\n  //     setError(\"Fill All Data !\");\n  //   } else {\n  //     console.log(\"Submit Publish Now\");\n  //   }\n  // };\n\n\n  const handleOpenPubLater = event => {\n    if (chipData.length === 0 || title === '' || summary === '') {\n      setError('Fill All Data !');\n    } else {\n      setOpenPubLater(true);\n    }\n  };\n\n  const handleClosePubLater = () => {\n    setOpenPubLater(false);\n  };\n\n  const publishData = async (publisedDate, status, mediaURL) => {\n    try {\n      let classMapping = {\n        class: []\n      };\n\n      for (var state in checkState) {\n        if (state !== 'All Parents' && state !== 'All Teachers' && state !== 'Select All') if (checkState[state] === true) {\n          classMapping.class.push(parseInt(state.split(' ')[1]));\n        }\n      }\n\n      if (checkState['All Parents'] === true) {\n        classMapping['parents'] = true;\n      }\n\n      if (checkState['All Teachers'] === true) {\n        classMapping['teachers'] = true;\n      } // console.log(classMapping, title, summary, eventDate, description);\n\n\n      console.log(mediaURL);\n      const response = AnnouncementService.publishAnnouncement({\n        id\n      }, {\n        title,\n        summary,\n        status,\n        event_date: eventDate,\n        main_content: description,\n        published_date: publisedDate,\n        published_to: classMapping,\n        media_url: mediaURL,\n        category_id: parseInt(Object.keys(props.categories).find(category_id => props.categories[category_id] === category))\n      }, props.token);\n\n      if (response.status === 200) {\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handlePublishLater = laterEventDate => {\n    clearInterval(saveDataApi);\n    let mediaUrlContainer = document.createElement('div');\n    mediaUrlContainer.innerHTML = description;\n    let mediaURL = mediaUrlContainer.getElementsByTagName('img')[0].src;\n    const status = 'active';\n    publishData(laterEventDate.toISOString(), status, mediaURL);\n    history.goBack();\n  };\n\n  const submitForm = async event => {\n    event.preventDefault();\n    clearInterval(saveDataApi);\n    let mediaUrlContainer = document.createElement('div');\n    mediaUrlContainer.innerHTML = description;\n    let mediaURL = mediaUrlContainer.getElementsByTagName('img')[0].src;\n    const status = 'published';\n    console.log(mediaURL);\n    publishData(new Date().toISOString(), status, mediaURL);\n    history.goBack();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.formStyle,\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    pt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: BackIcon,\n    alt: \"Back\",\n    className: classes.backImg,\n    onClick: () => {\n      history.push('/news');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: `${classes.themeColor} ${classes.titleText}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 15\n    }\n  }, \"Create Announcement\"))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    pt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: `${classes.errorColor}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 15\n    }\n  }, errMessage))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 463,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    name: \"title\",\n    className: classes.inputBorder,\n    value: title,\n    onChange: handleChangeInput,\n    required: true,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.adornmentColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 21\n      }\n    }, \"Title\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"summary\",\n    name: \"summary\",\n    className: classes.inputBorder,\n    value: summary,\n    onChange: handleChangeInput,\n    required: true,\n    startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n      position: \"start\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      className: classes.adornmentColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 21\n      }\n    }, \"Summary\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 15\n    }\n  }, \"Categories\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"demo-mutiple-chip-label\",\n    id: \"demo-mutiple-chip\",\n    value: category,\n    onChange: handleCategoryChange,\n    input: /*#__PURE__*/React.createElement(Input, {\n      id: \"select-multiple-chip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509,\n        columnNumber: 24\n      }\n    }),\n    renderValue: selected => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.chips,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Chip, {\n        key: selected,\n        label: selected,\n        className: classes.chip,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 23\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 15\n    }\n  }, categoryValues.map(category => /*#__PURE__*/React.createElement(MenuItem, {\n    key: category,\n    value: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 19\n    }\n  }, category))))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n    utils: DateFnsUtils,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    xs: 12,\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n    id: \"eventDate\",\n    label: \"Event Date\",\n    variant: \"inline\",\n    minDate: new Date(),\n    format: \"MM/dd/yyyy\",\n    value: eventDate,\n    onChange: handleEventDate,\n    KeyboardButtonProps: {\n      'aria-label': 'change date'\n    },\n    className: classes.datePicker,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    component: \"ul\",\n    className: `${classes.paper} ${classes.fieldStyle}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    p: 3,\n    className: classes.adornmentColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 15\n    }\n  }, \"Show in:\"), chipData.map((data, index) => {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Chip, {\n      label: data,\n      className: classes.chip,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 21\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    component: \"ul\",\n    className: `${classes.paper} ${classes.paperBoxShadow} ${classes.fieldStyle}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    className: classes.contentCenter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 17\n    }\n  }, checkStateLength.map((value, index) => {\n    return /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: value,\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: checkState[`Class ${value + 1}`],\n        onChange: handleCheckbox,\n        name: `Class ${value + 1}`,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 27\n        }\n      }),\n      label: `Class ${value + 1}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 23\n      }\n    });\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: checkState['All Teachers'],\n      onChange: handleCheckbox,\n      name: \"All Teachers\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 23\n      }\n    }),\n    label: \"All Teachers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 591,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: checkState['All Parents'],\n      onChange: handleCheckbox,\n      name: \"All Parents\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 23\n      }\n    }),\n    label: \"All Parents\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: checkState['Select All'],\n      onChange: handleCheckbox,\n      name: \"Select All\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 23\n      }\n    }),\n    label: \"Select All\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 19\n    }\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 628,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 629,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    className: classes.textAlignLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(RichTextEditor, {\n    handleDescription: handleDescription,\n    value: description,\n    token: props.token,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    className: classes.margin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.fieldStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.textAlignLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"cancelBtn\",\n    variant: \"contained\",\n    onClick: () => {\n      history.push('/news');\n    },\n    className: `${classes.fieldStyle} ${'publishBtn'} ${'publishLaterBtn'}`,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 17\n    }\n  }, \"Cancel\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    id: \"publishLaterBtn\",\n    variant: \"contained\",\n    onClick: handleOpenPubLater,\n    className: `${classes.fieldStyle} ${'publishBtn'} ${'publishLaterBtn'}`,\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 17\n    }\n  }, \"Publish Later\"), /*#__PURE__*/React.createElement(Button, {\n    id: \"publishBtn\",\n    variant: \"contained\",\n    className: `${classes.fieldStyle} ${'publishBtn'}`,\n    color: \"primary\" // onClick={handlePublish}\n    ,\n    type: \"submit\",\n    disableElevation: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 17\n    }\n  }, \"Publish Now\")))))), openPubLater ? /*#__PURE__*/React.createElement(PublishLater, {\n    open: openPubLater,\n    handleClose: handleClosePubLater,\n    handlePublishLater: handlePublishLater,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 9\n    }\n  }) : '');\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(CreateAnnouncement);","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/newsAnnouncement/teacher/CreateAnnouncement.js"],"names":["React","useState","useEffect","useHistory","useParams","connect","makeStyles","useTheme","Box","Grid","FormControl","Input","InputAdornment","Button","Typography","Paper","Chip","FormGroup","FormControlLabel","Checkbox","DateFnsUtils","Select","InputLabel","MenuItem","MuiPickersUtilsProvider","KeyboardDatePicker","RichTextEditor","PublishLater","AnnouncementService","set","useStyle","theme","formStyle","margin","width","backgroundColor","justifyContent","textAlign","borderRadius","backImg","float","paddingLeft","cursor","adornmentColor","color","palette","common","adornment","themeColor","deluge","padding","errorColor","fieldStyle","borderBottom","transitionProperty","transitionDuration","transitionTimingFunction","inputBorder","height","datePicker","breakpoints","down","paper","display","minHeight","flexWrap","listStyle","border","spacing","chip","paperBoxShadow","boxShadow","textAlignLeft","contentCenter","chips","marginTop","marginBottom","white","marginRight","CreateAnnouncement","props","classes","history","id","scheduler","setScheduler","openPubLater","setOpenPubLater","eventDate","setEventDate","title","setTitle","summary","setSummary","description","setDescription","errMessage","setError","category","setCategory","checkState","setCheckState","classState","categoryValues","Object","values","categories","checkStateLength","Array","keys","length","chipData","setChipData","selectAllObj","disSelectAllObj","saveDataApi","isFormLoading","fetchDraft","response","fetchDraftAnnouncement","token","status","tempClassCheckState","data","class_mapping","parents","teachers","class","forEach","classId","main_content","event_date","category_id","e","console","log","saveDetails","classMapping","state","push","parseInt","split","saveAnnouncement","published_to","find","setInterval","clearInterval","handleChangeInput","event","name","target","value","handleEventDate","date","handleCheckbox","checked","filter","handleDescription","handleCategoryChange","handleOpenPubLater","handleClosePubLater","publishData","publisedDate","mediaURL","publishAnnouncement","published_date","media_url","handlePublishLater","laterEventDate","mediaUrlContainer","document","createElement","innerHTML","getElementsByTagName","src","toISOString","goBack","submitForm","preventDefault","Date","BackIcon","titleText","selected","map","index","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'date-fns';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Chip from '@material-ui/core/Chip';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nimport BackIcon from '../../../assets/images/Back.svg';\nimport RichTextEditor from '../../../shared/richTextEditor';\nimport PublishLater from './PublishLater';\nimport AnnouncementService from '../AnnouncementService';\nimport { set } from 'date-fns';\n\nconst useStyle = makeStyles((theme) => ({\n  formStyle: {\n    margin: 'auto',\n    width: '95%',\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    textAlign: 'center',\n    borderRadius: '5px',\n  },\n  backImg: {\n    float: 'left',\n    paddingLeft: '10px',\n    cursor: 'pointer',\n  },\n  adornmentColor: {\n    color: `${theme.palette.common.adornment}`,\n  },\n  themeColor: {\n    color: `${theme.palette.common.deluge}`,\n    padding: 0,\n    margin: 0,\n  },\n  errorColor: {\n    color: 'red',\n  },\n  fieldStyle: {\n    width: '90%',\n    margin: 'auto',\n    '& .MuiInput-underline:before': {\n      borderBottom: '2px solid #eaeaea',\n    },\n    '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\n      borderBottom: '2px solid #7B72AF',\n      transitionProperty: 'border-bottom-color',\n      transitionDuration: '500ms',\n      transitionTimingFunction: 'cubic-bezier(0.4, 0, 0.2, 1)',\n    },\n  },\n  inputBorder: {\n    height: '50px',\n  },\n  datePicker: {\n    width: '100%',\n    [theme.breakpoints.down('xs')]: {\n      width: '100%',\n    },\n  },\n  paper: {\n    display: 'flex',\n    minHeight: '40px',\n    backgroundColor: 'none',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    border: `1px solid ${theme.palette.common.deluge}`,\n    padding: theme.spacing(0.5),\n    margin: 'auto',\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  paperBoxShadow: {\n    boxShadow: `2px 2px 2px 0 ${theme.palette.common.deluge} `,\n  },\n  textAlignLeft: {\n    textAlign: 'left',\n  },\n  contentCenter: {\n    justifyContent: 'center',\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n\n  margin: {\n    marginTop: '30px',\n    [theme.breakpoints.down('xs')]: {\n      marginTop: '10px',\n    },\n    '& .publishBtn': {\n      borderRadius: '3px',\n      width: 'inherit',\n      // opacity: '0.5',\n      marginBottom: '30px',\n    },\n    '& .publishLaterBtn': {\n      backgroundColor: `${theme.palette.common.white}`,\n      border: `1px solid ${theme.palette.common.adornment}`,\n      marginRight: '5px',\n    },\n  },\n}));\n\nconst CreateAnnouncement = (props) => {\n  const classes = useStyle();\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [scheduler, setScheduler] = useState(false);\n  const [openPubLater, setOpenPubLater] = useState(false);\n  const [eventDate, setEventDate] = useState(null);\n  const [title, setTitle] = useState('');\n  const [summary, setSummary] = useState('');\n  const [description, setDescription] = useState('');\n  const [errMessage, setError] = useState('');\n  const [category, setCategory] = useState('');\n  const [checkState, setCheckState] = useState({\n    ...props.classState,\n    'All Teachers': false,\n    'All Parents': false,\n    'Select All': false,\n  });\n  const categoryValues = [...Object.values(props.categories)];\n\n  const checkStateLength = [\n    ...Array(Object.keys(props.classState).length).keys(),\n  ];\n\n  const [chipData, setChipData] = useState([]);\n  const selectAllObj = {\n    'Class 1': true,\n    'Class 2': true,\n    'Class 3': true,\n    'Class 4': true,\n    'Class 5': true,\n    'Class 6': true,\n    'Class 7': true,\n    'Class 8': true,\n    'Class 9': true,\n    'Class 10': true,\n    'All Teachers': true,\n    'All Parents': true,\n    'Select All': true,\n  };\n\n  const disSelectAllObj = {\n    'Class 1': false,\n    'Class 2': false,\n    'Class 3': false,\n    'Class 4': false,\n    'Class 5': false,\n    'Class 6': false,\n    'Class 7': false,\n    'Class 8': false,\n    'Class 9': false,\n    'Class 10': false,\n    'All Teachers': false,\n    'All Parents': false,\n    'Select All': false,\n  };\n  let saveDataApi;\n  useEffect(() => {\n    let isFormLoading = true;\n    // give first api call to create\n\n    // api call to save\n    const fetchDraft = async () => {\n      try {\n        const response = await AnnouncementService.fetchDraftAnnouncement(\n          { id },\n          props.token\n        );\n        if (response.status === 200) {\n          if (isFormLoading) {\n            let tempClassCheckState = {};\n            if (response.data.data.class_mapping) {\n              if (response.data.data.class_mapping.parents) {\n                tempClassCheckState['All Parents'] = true;\n                setChipData([...chipData, 'All Parents']);\n              }\n              if (response.data.data.class_mapping.teachers) {\n                tempClassCheckState['All Teachers'] = true;\n                setChipData([...chipData, 'All Teachers']);\n              }\n              response.data.data.class_mapping.class.forEach((classId) => {\n                tempClassCheckState[`Class ${classId}`] = true;\n\n                setChipData((chipData) => [...chipData, `Class ${classId}`]);\n              });\n            }\n            setCheckState({ ...checkState, ...tempClassCheckState });\n            setDescription(\n              response.data.data.main_content\n                ? response.data.data.main_content\n                : ''\n            );\n            setTitle(response.data.data.title ? response.data.data.title : '');\n            setSummary(\n              response.data.data.summary ? response.data.data.summary : ''\n            );\n            setEventDate(response.data.data.event_date);\n            setCategory(\n              props.categories[response.data.data.category_id]\n                ? props.categories[response.data.data.category_id]\n                : ''\n            );\n          }\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    fetchDraft();\n    return () => {\n      isFormLoading = false;\n      // clearInterval(saveDataApi);\n    };\n  }, []);\n  useEffect(() => {\n    const saveDetails = async () => {\n      try {\n        let classMapping = { class: [] };\n        for (var state in checkState) {\n          if (\n            state !== 'All Parents' &&\n            state !== 'All Teachers' &&\n            state !== 'Select All'\n          )\n            if (checkState[state] === true) {\n              classMapping.class.push(parseInt(state.split(' ')[1]));\n            }\n        }\n        if (checkState['All Parents'] === true) {\n          classMapping['parents'] = true;\n        }\n        if (checkState['All Teachers'] === true) {\n          classMapping['teachers'] = true;\n        }\n\n        const response = await AnnouncementService.saveAnnouncement(\n          { id },\n          {\n            title,\n            summary,\n            event_date: eventDate,\n            main_content: description,\n            published_to: classMapping,\n            category_id: parseInt(\n              Object.keys(props.categories).find(\n                (category_id) => props.categories[category_id] === category\n              )\n            ),\n          },\n          props.token\n        );\n\n        if (response.status === 200) {\n          console.log(response);\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    saveDataApi = setInterval(() => {\n      // console.log(1);\n      saveDetails();\n    }, 10000);\n    return () => clearInterval(saveDataApi);\n  }, [title, eventDate, description, summary, checkState, category]);\n\n  const handleChangeInput = (event) => {\n    let name = event.target.name;\n    if (name === 'title') {\n      setTitle(event.target.value);\n    } else {\n      setSummary(event.target.value);\n    }\n  };\n\n  const handleEventDate = (date) => {\n    setEventDate(date);\n  };\n\n  const handleCheckbox = (event) => {\n    let name = event.target.name;\n    if (name === 'Select All') {\n      if (event.target.checked) {\n        setCheckState(selectAllObj);\n        setChipData(Object.keys(checkState));\n      } else {\n        setCheckState(disSelectAllObj);\n        setChipData([]);\n      }\n    } else {\n      setCheckState({ ...checkState, [name]: event.target.checked });\n\n      if (event.target.checked) {\n        setChipData([...chipData, name]);\n      } else {\n        setChipData(chipData.filter((e) => e !== name));\n      }\n    }\n  };\n\n  const handleDescription = (data) => {\n    setDescription(data);\n  };\n  const handleCategoryChange = (event) => {\n    setCategory(event.target.value);\n  };\n\n  // const handlePublish = (event) => {\n  //   if (\n  //     chipData.length === 0 ||\n  //     title === \"\" ||\n  //     summary === \"\" ||\n  //     eventDate === null\n  //   ) {\n  //     setError(\"Fill All Data !\");\n  //   } else {\n  //     console.log(\"Submit Publish Now\");\n  //   }\n  // };\n\n  const handleOpenPubLater = (event) => {\n    if (chipData.length === 0 || title === '' || summary === '') {\n      setError('Fill All Data !');\n    } else {\n      setOpenPubLater(true);\n    }\n  };\n\n  const handleClosePubLater = () => {\n    setOpenPubLater(false);\n  };\n\n  const publishData = async (publisedDate, status, mediaURL) => {\n    try {\n      let classMapping = { class: [] };\n      for (var state in checkState) {\n        if (\n          state !== 'All Parents' &&\n          state !== 'All Teachers' &&\n          state !== 'Select All'\n        )\n          if (checkState[state] === true) {\n            classMapping.class.push(parseInt(state.split(' ')[1]));\n          }\n      }\n      if (checkState['All Parents'] === true) {\n        classMapping['parents'] = true;\n      }\n      if (checkState['All Teachers'] === true) {\n        classMapping['teachers'] = true;\n      }\n\n      // console.log(classMapping, title, summary, eventDate, description);\n      console.log(mediaURL);\n      const response = AnnouncementService.publishAnnouncement(\n        { id },\n        {\n          title,\n          summary,\n          status,\n          event_date: eventDate,\n          main_content: description,\n          published_date: publisedDate,\n          published_to: classMapping,\n          media_url: mediaURL,\n          category_id: parseInt(\n            Object.keys(props.categories).find(\n              (category_id) => props.categories[category_id] === category\n            )\n          ),\n        },\n        props.token\n      );\n      if (response.status === 200) {\n        console.log(response);\n      }\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handlePublishLater = (laterEventDate) => {\n    clearInterval(saveDataApi);\n    let mediaUrlContainer = document.createElement('div');\n    mediaUrlContainer.innerHTML = description;\n    let mediaURL = mediaUrlContainer.getElementsByTagName('img')[0].src;\n    const status = 'active';\n\n    publishData(laterEventDate.toISOString(), status, mediaURL);\n    history.goBack();\n  };\n  const submitForm = async (event) => {\n    event.preventDefault();\n    clearInterval(saveDataApi);\n    let mediaUrlContainer = document.createElement('div');\n    mediaUrlContainer.innerHTML = description;\n    let mediaURL = mediaUrlContainer.getElementsByTagName('img')[0].src;\n\n    const status = 'published';\n    console.log(mediaURL);\n    publishData(new Date().toISOString(), status, mediaURL);\n    history.goBack();\n  };\n\n  return (\n    <>\n      <div>\n        <form className={classes.formStyle} onSubmit={submitForm}>\n          <Box className={classes.margin} pt={2}>\n            <div>\n              <img\n                src={BackIcon}\n                alt='Back'\n                className={classes.backImg}\n                onClick={() => {\n                  history.push('/news');\n                }}\n              />\n              <Typography\n                variant='h5'\n                className={`${classes.themeColor} ${classes.titleText}`}\n              >\n                Create Announcement\n              </Typography>\n            </div>\n          </Box>\n          <Box className={classes.margin} pt={2}>\n            <div>\n              <Typography className={`${classes.errorColor}`}>\n                {errMessage}\n              </Typography>\n            </div>\n          </Box>\n          <Box className={classes.margin}>\n            <FormControl className={classes.fieldStyle}>\n              <Input\n                id='title'\n                name='title'\n                className={classes.inputBorder}\n                value={title}\n                onChange={handleChangeInput}\n                required={true}\n                startAdornment={\n                  <InputAdornment position='start'>\n                    <Typography className={classes.adornmentColor}>\n                      Title\n                    </Typography>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </Box>\n          <Box className={classes.margin}>\n            <FormControl className={classes.fieldStyle}>\n              <Input\n                id='summary'\n                name='summary'\n                className={classes.inputBorder}\n                value={summary}\n                onChange={handleChangeInput}\n                required={true}\n                startAdornment={\n                  <InputAdornment position='start'>\n                    <Typography className={classes.adornmentColor}>\n                      Summary\n                    </Typography>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          </Box>\n          <Box className={classes.margin}>\n            <FormControl className={classes.fieldStyle}>\n              <InputLabel>Categories</InputLabel>\n              <Select\n                labelId='demo-mutiple-chip-label'\n                id='demo-mutiple-chip'\n                value={category}\n                onChange={handleCategoryChange}\n                input={<Input id='select-multiple-chip' />}\n                renderValue={(selected) => {\n                  return (\n                    <div className={classes.chips}>\n                      <Chip\n                        key={selected}\n                        label={selected}\n                        className={classes.chip}\n                      />\n                    </div>\n                  );\n                }}\n              >\n                {categoryValues.map((category) => (\n                  <MenuItem key={category} value={category}>\n                    {category}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </Box>\n          <Box className={classes.margin}>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <Grid container>\n                <Grid xs={12} className={classes.fieldStyle}>\n                  <KeyboardDatePicker\n                    id='eventDate'\n                    label='Event Date'\n                    variant='inline'\n                    minDate={new Date()}\n                    format='MM/dd/yyyy'\n                    value={eventDate}\n                    onChange={handleEventDate}\n                    KeyboardButtonProps={{\n                      'aria-label': 'change date',\n                    }}\n                    className={classes.datePicker}\n                  />\n                </Grid>\n              </Grid>\n            </MuiPickersUtilsProvider>\n          </Box>\n          <Box className={classes.margin}>\n            <Box\n              component='ul'\n              className={`${classes.paper} ${classes.fieldStyle}`}\n            >\n              <Typography variant='h6' p={3} className={classes.adornmentColor}>\n                Show in:\n              </Typography>\n              {chipData.map((data, index) => {\n                return (\n                  <li key={index}>\n                    <Chip label={data} className={classes.chip} />\n                  </li>\n                );\n              })}\n            </Box>\n          </Box>\n          <Box mt={1}>\n            <Paper\n              component='ul'\n              className={`${classes.paper} ${classes.paperBoxShadow} ${classes.fieldStyle}`}\n            >\n              <FormControl>\n                <FormGroup row className={classes.contentCenter}>\n                  {checkStateLength.map((value, index) => {\n                    return (\n                      <FormControlLabel\n                        key={value}\n                        control={\n                          <Checkbox\n                            checked={checkState[`Class ${value + 1}`]}\n                            onChange={handleCheckbox}\n                            name={`Class ${value + 1}`}\n                            color='primary'\n                          />\n                        }\n                        label={`Class ${value + 1}`}\n                      />\n                    );\n                  })}\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={checkState['All Teachers']}\n                        onChange={handleCheckbox}\n                        name='All Teachers'\n                        color='primary'\n                      />\n                    }\n                    label='All Teachers'\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={checkState['All Parents']}\n                        onChange={handleCheckbox}\n                        name='All Parents'\n                        color='primary'\n                      />\n                    }\n                    label='All Parents'\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={checkState['Select All']}\n                        onChange={handleCheckbox}\n                        name='Select All'\n                        color='primary'\n                      />\n                    }\n                    label='Select All'\n                  />\n                </FormGroup>\n              </FormControl>\n            </Paper>\n          </Box>\n          <Box className={classes.margin}>\n            <Grid className={classes.fieldStyle}>\n              <Typography variant='h6' className={classes.textAlignLeft}>\n                Description\n              </Typography>\n              <RichTextEditor\n                handleDescription={handleDescription}\n                value={description}\n                token={props.token}\n              />\n            </Grid>\n          </Box>\n          <Box className={classes.margin}>\n            <Grid container spacing={3} className={classes.fieldStyle}>\n              <Grid item xs={6} className={classes.textAlignLeft}>\n                <Button\n                  id='cancelBtn'\n                  variant='contained'\n                  onClick={() => {\n                    history.push('/news');\n                  }}\n                  className={`${\n                    classes.fieldStyle\n                  } ${'publishBtn'} ${'publishLaterBtn'}`}\n                  disableElevation\n                >\n                  Cancel\n                </Button>\n              </Grid>\n              <Grid item xs={6}>\n                <Button\n                  id='publishLaterBtn'\n                  variant='contained'\n                  onClick={handleOpenPubLater}\n                  className={`${\n                    classes.fieldStyle\n                  } ${'publishBtn'} ${'publishLaterBtn'}`}\n                  disableElevation\n                >\n                  Publish Later\n                </Button>\n                <Button\n                  id='publishBtn'\n                  variant='contained'\n                  className={`${classes.fieldStyle} ${'publishBtn'}`}\n                  color='primary'\n                  // onClick={handlePublish}\n                  type='submit'\n                  disableElevation\n                >\n                  Publish Now\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </form>\n      </div>\n      {openPubLater ? (\n        <PublishLater\n          open={openPubLater}\n          handleClose={handleClosePubLater}\n          handlePublishLater={handlePublishLater}\n        />\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n  };\n};\n\nexport default connect(mapStateToProps)(CreateAnnouncement);\n"]},"metadata":{},"sourceType":"module"}