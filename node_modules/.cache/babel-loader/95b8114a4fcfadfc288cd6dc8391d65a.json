{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/newsAnnouncement/NewsAnnouncement.js\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useLocation, useRouteMatch, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AnnouncementSection from \"./AnnouncementSection\";\nimport AnnouncementService from \"./AnnouncementService\";\nimport Box from \"@material-ui/core/Grid\";\nimport CreateAnnouncement from \"./teacher/CreateAnnouncement\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: \"100%\",\n    backgroundColor: theme.palette.mainBackground,\n    height: \"100%\",\n    marign: \"0\",\n    padding: \"0\",\n    overflowY: \"auto\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\"\n    }\n  },\n  content: {\n    flexGrow: \"1\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"0\",\n    padding: \"0 20px 20px 20px\"\n  },\n  panel: {\n    flexGrow: \"1\",\n    overflow: \"auto\",\n    minHeight: \"100%\",\n    scrollbarWidth: \"none\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\"\n    }\n  },\n  tabBar: {\n    backgroundColor: theme.palette.mainBackground,\n    color: theme.palette.common.deluge // boxShadow: 'none',\n\n  }\n}));\n\nfunction TabPanel(props) {\n  const {\n    children,\n    value,\n    index,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `full-width-tabpanel-${index}`,\n    \"aria-labelledby\": `full-width-tab-${index}`\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }), value === index && /*#__PURE__*/React.createElement(Box, {\n    p: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 27\n    }\n  }, children));\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`\n  };\n}\n\nconst NewsAnnouncement = props => {\n  const classes = useStyles();\n  const location = useLocation();\n  const {\n    id\n  } = useParams();\n  const [classState, setClassState] = useState(null);\n  const [category, setcategory] = useState(null);\n  const [isClassLoading, setIsClassLoading] = useState(true);\n  const [value, setValue] = useState(0);\n  const tabref = useRef(null);\n  useEffect(() => {\n    const fetchClasses = async () => {\n      const classesResponse = await AnnouncementService.fetchClasses(props.token);\n      let initialClassState = {};\n      classesResponse.data.data.forEach(className => {\n        initialClassState[className.class_name] = false;\n      });\n      const categoryResponse = await AnnouncementService.fetchCategories(props.token);\n      let categoryList = {};\n      categoryResponse.data.data.forEach(categoryData => {\n        categoryList[categoryData.id] = categoryData.category_name;\n      });\n      setcategory({ ...categoryList\n      });\n      setClassState({ ...initialClassState\n      });\n    };\n\n    if (location.pathname === `/create-announcement/${id}`) {\n      fetchClasses();\n    }\n  }, []);\n  useEffect(() => {\n    if (classState !== null && category != null) {\n      setIsClassLoading(false);\n    }\n  }, [classState, category]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = index => {\n    setValue(index);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    id: \"scrollable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, location.pathname === \"/news\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AppBar, {\n    position: \"sticky\",\n    className: classes.tabBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    centered: true,\n    value: value,\n    onChange: handleChange,\n    indicatorColor: \"primary\",\n    textColor: \"primary\",\n    variant: \"fullWidth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"By me\"\n  }, a11yProps(0), {\n    className: classes.eventsTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Tab, Object.assign({\n    label: \"For me\"\n  }, a11yProps(1), {\n    className: classes.eventsTab,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })))), [...Array(2).keys()].map(id => /*#__PURE__*/React.createElement(TabPanel, {\n    value: value,\n    index: id,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AnnouncementSection, {\n    createdBy: !id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 15\n    }\n  })))) : location.pathname === `/create-announcement/${id}` && isClassLoading === false ? /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateAnnouncement, {\n    classState: classState,\n    categories: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })) : \"\");\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(NewsAnnouncement);","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/newsAnnouncement/NewsAnnouncement.js"],"names":["React","useEffect","useState","useRef","useLocation","useRouteMatch","useParams","connect","makeStyles","Grid","AnnouncementSection","AnnouncementService","Box","CreateAnnouncement","AppBar","Tabs","Tab","axios","useStyles","theme","container","width","backgroundColor","palette","mainBackground","height","marign","padding","overflowY","display","content","flexGrow","flexDirection","minHeight","panel","overflow","scrollbarWidth","tabBar","color","common","deluge","TabPanel","props","children","value","index","other","a11yProps","id","NewsAnnouncement","classes","location","classState","setClassState","category","setcategory","isClassLoading","setIsClassLoading","setValue","tabref","fetchClasses","classesResponse","token","initialClassState","data","forEach","className","class_name","categoryResponse","fetchCategories","categoryList","categoryData","category_name","pathname","handleChange","event","newValue","handleChangeIndex","eventsTab","Array","keys","map","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { useLocation, useRouteMatch, useParams } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AnnouncementSection from \"./AnnouncementSection\";\nimport AnnouncementService from \"./AnnouncementService\";\nimport Box from \"@material-ui/core/Grid\";\nimport CreateAnnouncement from \"./teacher/CreateAnnouncement\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\n\nimport axios from \"axios\";\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: \"100%\",\n    backgroundColor: theme.palette.mainBackground,\n    height: \"100%\",\n    marign: \"0\",\n    padding: \"0\",\n    overflowY: \"auto\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  content: {\n    flexGrow: \"1\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minHeight: \"0\",\n    padding: \"0 20px 20px 20px\",\n  },\n  panel: {\n    flexGrow: \"1\",\n    overflow: \"auto\",\n    minHeight: \"100%\",\n    scrollbarWidth: \"none\",\n    \"&::-webkit-scrollbar\": {\n      display: \"none\",\n    },\n  },\n  tabBar: {\n    backgroundColor: theme.palette.mainBackground,\n    color: theme.palette.common.deluge,\n    // boxShadow: 'none',\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={4}>{children}</Box>}\n    </div>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    \"aria-controls\": `full-width-tabpanel-${index}`,\n  };\n}\n\nconst NewsAnnouncement = (props) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const { id } = useParams();\n  const [classState, setClassState] = useState(null);\n  const [category, setcategory] = useState(null);\n  const [isClassLoading, setIsClassLoading] = useState(true);\n  const [value, setValue] = useState(0);\n\n  const tabref = useRef(null);\n\n  useEffect(() => {\n    const fetchClasses = async () => {\n      const classesResponse = await AnnouncementService.fetchClasses(\n        props.token\n      );\n      let initialClassState = {};\n      classesResponse.data.data.forEach((className) => {\n        initialClassState[className.class_name] = false;\n      });\n\n      const categoryResponse = await AnnouncementService.fetchCategories(\n        props.token\n      );\n      let categoryList = {};\n      categoryResponse.data.data.forEach((categoryData) => {\n        categoryList[categoryData.id] = categoryData.category_name;\n      });\n      setcategory({ ...categoryList });\n      setClassState({ ...initialClassState });\n    };\n    if (location.pathname === `/create-announcement/${id}`) {\n      fetchClasses();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (classState !== null && category != null) {\n      setIsClassLoading(false);\n    }\n  }, [classState, category]);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n\n  return (\n    <div className={classes.container} id=\"scrollable\">\n      {location.pathname === \"/news\" ? (\n        <>\n          <AppBar position=\"sticky\" className={classes.tabBar}>\n            <Tabs\n              centered\n              value={value}\n              onChange={handleChange}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              variant=\"fullWidth\"\n            >\n              <Tab\n                label=\"By me\"\n                {...a11yProps(0)}\n                className={classes.eventsTab}\n              />\n              <Tab\n                label=\"For me\"\n                {...a11yProps(1)}\n                className={classes.eventsTab}\n              />\n            </Tabs>\n          </AppBar>\n          {[...Array(2).keys()].map((id) => (\n            <TabPanel value={value} index={id} key={id}>\n              <AnnouncementSection createdBy={!id} />\n\n              <br />\n              <br />\n              <br />\n            </TabPanel>\n          ))}\n        </>\n      ) : location.pathname === `/create-announcement/${id}` &&\n        isClassLoading === false ? (\n        <Box p={3}>\n          <CreateAnnouncement classState={classState} categories={category} />\n          <br />\n          <br />\n          <br />\n        </Box>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n  };\n};\n\nexport default connect(mapStateToProps)(NewsAnnouncement);\n"]},"metadata":{},"sourceType":"module"}