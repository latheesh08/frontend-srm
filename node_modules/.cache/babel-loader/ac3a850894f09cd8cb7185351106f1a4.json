{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/auth/Logout.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Typography from \"@material-ui/core/Typography\";\nimport * as actions from \"./store/actions\";\nconst useStyles = makeStyles(theme => ({\n  logoutContainer: {\n    minWidth: \"200px\"\n  },\n  dialogActionsContainer: {\n    \"&.MuiDialogActions-root\": {\n      justifyContent: \"center\",\n      marginBottom: \"10px\"\n    }\n  },\n  button: {\n    minWidth: \"80px\",\n    textTransform: \"none\"\n  },\n  confirmationText: {\n    fontWeight: 500,\n    fontSize: \"1rem\",\n    color: \"#000000\"\n  },\n  dialogContent: {\n    textAlign: \"center\"\n  }\n}));\n\nconst Logout = props => {\n  const classes = useStyles();\n  const {\n    onLogout,\n    open,\n    handleClose\n  } = props;\n\n  const handleLogout = () => {\n    onLogout(props.isAuthenticated);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dialog, {\n    open: open,\n    onClose: handleClose,\n    maxWidth: \"sm\",\n    fullWidth: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.logoutContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ExitToAppIcon, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.confirmationText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Want to logout?\")))), /*#__PURE__*/React.createElement(DialogActions, {\n    classes: {\n      root: classes.dialogActionsContainer\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    variant: \"outlined\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"No\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleLogout,\n    color: \"primary\",\n    autoFocus: true,\n    variant: \"contained\",\n    className: classes.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Yes\"))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: isAuthenticated => dispatch(actions.logout(isAuthenticated))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/auth/Logout.js"],"names":["React","connect","makeStyles","Button","Dialog","DialogActions","DialogContent","ExitToAppIcon","Typography","actions","useStyles","theme","logoutContainer","minWidth","dialogActionsContainer","justifyContent","marginBottom","button","textTransform","confirmationText","fontWeight","fontSize","color","dialogContent","textAlign","Logout","props","classes","onLogout","open","handleClose","handleLogout","isAuthenticated","root","mapStateToProps","state","auth","token","mapDispatchToProps","dispatch","logout"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport * as actions from \"./store/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  logoutContainer: {\n    minWidth: \"200px\",\n  },\n  dialogActionsContainer: {\n    \"&.MuiDialogActions-root\": {\n      justifyContent: \"center\",\n      marginBottom: \"10px\",\n    },\n  },\n  button: {\n    minWidth: \"80px\",\n    textTransform: \"none\",\n  },\n  confirmationText: {\n    fontWeight: 500,\n    fontSize: \"1rem\",\n    color: \"#000000\",\n  },\n  dialogContent: {\n    textAlign: \"center\",\n  },\n}));\n\nconst Logout = (props) => {\n  const classes = useStyles();\n  const { onLogout, open, handleClose } = props;\n\n  const handleLogout = () => {\n    onLogout(props.isAuthenticated);\n  };\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth={\"sm\"}\n        fullWidth={false}\n      >\n        <DialogContent>\n          <div className={classes.logoutContainer}>\n            <div className={classes.dialogContent}>\n              <ExitToAppIcon color=\"primary\" />\n            </div>\n            <div className={classes.dialogContent}>\n              <Typography className={classes.confirmationText}>\n                Want to logout?\n              </Typography>\n            </div>\n          </div>\n        </DialogContent>\n        <DialogActions classes={{ root: classes.dialogActionsContainer }}>\n          <Button\n            onClick={handleClose}\n            color=\"primary\"\n            variant=\"outlined\"\n            className={classes.button}\n          >\n            No\n          </Button>\n          <Button\n            onClick={handleLogout}\n            color=\"primary\"\n            autoFocus\n            variant=\"contained\"\n            className={classes.button}\n          >\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onLogout: (isAuthenticated) => dispatch(actions.logout(isAuthenticated)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);\n"]},"metadata":{},"sourceType":"module"}