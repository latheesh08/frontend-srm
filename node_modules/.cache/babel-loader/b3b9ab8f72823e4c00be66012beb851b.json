{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/home/studentHome/homeWork/Homeworks.js\";\nimport React, { useState, useEffect } from 'react';\nimport HomeworkCard from './HomeworkCard';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { makeStyles } from '@material-ui/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport HomeSerivce from '../../HomeSerivce';\nconst useStyles = makeStyles(theme => ({\n  loading: {\n    width: '100%',\n    textAlign: 'center',\n    paddingTop: '8px',\n    fontSize: '20px'\n  }\n}));\n\nconst Homework = props => {\n  const classes = useStyles();\n  const [hasMore, setHasMore] = useState(true);\n  const [homework, setHomework] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // console.log('Task Content');\n    let isAnnouncementLoading = true;\n\n    const fetchHomework = async () => {\n      try {\n        const token = localStorage.getItem('srmToken');\n        const response = await HomeSerivce.fetchHomework(token);\n\n        if (isAnnouncementLoading) {\n          setHomework(response.data.data.data);\n          let next_page_url = response.data.data.next_page_url;\n\n          if (next_page_url === null) {\n            setHasMore(false);\n          } else {\n            setHasMore(true);\n          }\n\n          setIsLoading(false);\n          setNextUrl(response.data.data.next_page_url);\n          console.log(response.data);\n        }\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    };\n\n    fetchHomework();\n    return () => {\n      isAnnouncementLoading = false;\n    };\n  }, []);\n\n  const fetchHomeworkOnScroll = () => {\n    console.log('Fetch More HW');\n\n    const fetchMoreHomework = async () => {\n      const token = localStorage.getItem('srmToken');\n      const response = await HomeSerivce.fetchMoreHomework(token, nextUrl);\n      setHomework([...homework, ...response.data.data.data]); // setIsLoading(false);\n\n      let next_page_url = response.data.data.next_page_url;\n\n      if (next_page_url === null) {\n        setHasMore(false);\n      }\n    };\n\n    fetchMoreHomework();\n  };\n\n  return /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: homework.length,\n    next: fetchHomeworkOnScroll,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      color: \"primary\",\n      size: 30,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    })),\n    scrollableTarget: \"scrollable\",\n    scrollThreshold: 0.2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, homework.map(hw => /*#__PURE__*/React.createElement(HomeworkCard, {\n    key: hw.id,\n    id: hw.id,\n    title: hw.title,\n    due_date: hw.submission_date,\n    content: hw.main_content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Homework;","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/home/studentHome/homeWork/Homeworks.js"],"names":["React","useState","useEffect","HomeworkCard","InfiniteScroll","makeStyles","CircularProgress","HomeSerivce","useStyles","theme","loading","width","textAlign","paddingTop","fontSize","Homework","props","classes","hasMore","setHasMore","homework","setHomework","nextUrl","setNextUrl","isLoading","setIsLoading","isAnnouncementLoading","fetchHomework","token","localStorage","getItem","response","data","next_page_url","console","log","error","fetchHomeworkOnScroll","fetchMoreHomework","length","map","hw","id","title","submission_date","main_content"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport HomeworkCard from './HomeworkCard';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { makeStyles } from '@material-ui/styles';\nimport { CircularProgress } from '@material-ui/core';\nimport HomeSerivce from '../../HomeSerivce';\n\nconst useStyles = makeStyles((theme) => ({\n  loading: {\n    width: '100%',\n    textAlign: 'center',\n    paddingTop: '8px',\n    fontSize: '20px',\n  },\n}));\n\nconst Homework = (props) => {\n  const classes = useStyles();\n  const [hasMore, setHasMore] = useState(true);\n  const [homework, setHomework] = useState([]);\n\n  const [nextUrl, setNextUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // console.log('Task Content');\n    let isAnnouncementLoading = true;\n    const fetchHomework = async () => {\n      try {\n        const token = localStorage.getItem('srmToken');\n        const response = await HomeSerivce.fetchHomework(token);\n        if (isAnnouncementLoading) {\n          setHomework(response.data.data.data);\n          let next_page_url = response.data.data.next_page_url;\n          if (next_page_url === null) {\n            setHasMore(false);\n          } else {\n            setHasMore(true);\n          }\n          setIsLoading(false);\n\n          setNextUrl(response.data.data.next_page_url);\n          console.log(response.data);\n        }\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    };\n    fetchHomework();\n    return () => {\n      isAnnouncementLoading = false;\n    };\n  }, []);\n\n  const fetchHomeworkOnScroll = () => {\n    console.log('Fetch More HW');\n    const fetchMoreHomework = async () => {\n      const token = localStorage.getItem('srmToken');\n      const response = await HomeSerivce.fetchMoreHomework(token, nextUrl);\n      setHomework([...homework, ...response.data.data.data]);\n      // setIsLoading(false);\n      let next_page_url = response.data.data.next_page_url;\n      if (next_page_url === null) {\n        setHasMore(false);\n      }\n    };\n    fetchMoreHomework();\n  };\n\n  return (\n    <InfiniteScroll\n      dataLength={homework.length}\n      next={fetchHomeworkOnScroll}\n      hasMore={hasMore}\n      loader={\n        <>\n          <div className={classes.loading}>\n            {/* <Typography>Loading...</Typography> */}\n            <CircularProgress color='primary' size={30} />\n          </div>\n          <br />\n        </>\n      }\n      scrollableTarget='scrollable'\n      scrollThreshold={0.2}\n    >\n      {homework.map((hw) => (\n        <HomeworkCard\n          key={hw.id}\n          id={hw.id}\n          title={hw.title}\n          due_date={hw.submission_date}\n          content={hw.main_content}\n        />\n      ))}\n    </InfiniteScroll>\n  );\n};\n\nexport default Homework;\n"]},"metadata":{},"sourceType":"module"}