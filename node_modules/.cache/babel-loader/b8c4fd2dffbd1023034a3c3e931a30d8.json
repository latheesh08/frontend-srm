{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/home/studentHome/Reminder.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport * as moment from \"moment\";\nimport HomeService from \"../HomeSerivce\";\nimport close from \"../../../assets/images/home/Close.svg\";\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    float: \"right\",\n    padding: \"10px\",\n    cursor: \"pointer\"\n  },\n  title: {\n    paddinLeft: \"10px\",\n    paddingTop: \"10px\"\n  },\n  dialogHeader: {\n    padding: \"10px\",\n    borderBottom: \"1px solid #E5E5EA\"\n  },\n  checkForm: {\n    padding: \"10px\"\n  },\n  checkbox: {\n    float: \"right\"\n  },\n  label: {\n    paddinLeft: \"10px\",\n    paddingTop: \"10px\"\n  }\n}));\n\nconst Reminder = props => {\n  const classes = useStyles();\n  const {\n    open,\n    onClose,\n    days\n  } = props;\n  const [checkboxes, setCheckBoxes] = useState({\n    oneDayBefore: false,\n    twoDayBefore: false,\n    threeDayBefore: days === 3 ? false : undefined\n  });\n  useEffect(() => {\n    if (props.entityDate !== null) {\n      let tempCheckBoxes = { ...checkboxes\n      };\n\n      if (props.entityDate[\"1_day_before\"]) {\n        tempCheckBoxes.oneDayBefore = true;\n      }\n\n      if (props.entityDate[\"2_day_before\"]) {\n        tempCheckBoxes.twoDayBefore = true;\n      }\n\n      if (props.entityDate[\"3_day_before\"] && checkboxes.threeDayBefore !== undefined) {\n        tempCheckBoxes.threeDayBefore = true;\n      }\n\n      setCheckBoxes({ ...checkboxes,\n        ...tempCheckBoxes\n      });\n    }\n  }, []);\n\n  const handleReminderClose = async () => {\n    try {\n      if (checkboxes.oneDayBefore === false && checkboxes.twoDayBefore === false && !checkboxes.threeDayBefore) {\n        onClose({ ...checkboxes\n        });\n      } else {\n        let entityDate = {};\n\n        if (checkboxes.oneDayBefore === true) {\n          entityDate[\"1_day_before\"] = moment(props.eventDate).subtract(1, \"days\").format(\"YYYY-MM-DD\");\n        }\n\n        if (checkboxes.twoDayBefore === true) {\n          entityDate[\"2_day_before\"] = moment(props.eventDate).subtract(2, \"days\").format(\"YYYY-MM-DD\");\n        }\n\n        if (checkboxes.threeDayBefore === true) {\n          entityDate[\"3_day_before\"] = moment(props.eventDate).subtract(3, \"days\").format(\"YYYY-MM-DD\");\n        }\n\n        console.log(checkboxes, entityDate);\n        const response = await HomeService.setReminder({\n          entity_id: props.id,\n          entity_date: entityDate,\n          entity_type: \"news\"\n        }, props.token);\n        onClose({ ...checkboxes\n        });\n      } // const response =await HomeService.setReminder()\n\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleCheck = event => {\n    setCheckBoxes({ ...checkboxes,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleReminderClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    className: classes.dialog,\n    fullWidth: true,\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: close,\n    alt: \"close\",\n    className: classes.closeButton,\n    onClick: handleReminderClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"title\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Remind me\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    className: classes.checkbox,\n    checked: checkboxes.oneDayBefore,\n    onChange: handleCheck,\n    color: \"primary\",\n    name: \"oneDayBefore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, \"1 day before\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    className: classes.checkbox,\n    checked: checkboxes.twoDayBefore,\n    onChange: handleCheck,\n    color: \"primary\",\n    name: \"twoDayBefore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, \"2 day before\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }), checkboxes.threeDayBefore !== undefined ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n    className: classes.checkbox,\n    checked: checkboxes.threeDayBefore,\n    onChange: handleCheck,\n    color: \"primary\",\n    name: \"threeDayBefore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, \"3 day before\")) : \"\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(Reminder);","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/home/studentHome/Reminder.js"],"names":["React","useState","useEffect","connect","makeStyles","Dialog","Typography","Checkbox","moment","HomeService","useStyles","theme","closeButton","float","padding","cursor","title","paddinLeft","paddingTop","dialogHeader","borderBottom","checkForm","checkbox","label","Reminder","props","classes","open","onClose","days","checkboxes","setCheckBoxes","oneDayBefore","twoDayBefore","threeDayBefore","undefined","entityDate","tempCheckBoxes","handleReminderClose","eventDate","subtract","format","console","log","response","setReminder","entity_id","id","entity_date","entity_type","token","e","handleCheck","event","target","name","checked","dialog","close","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport * as moment from \"moment\";\nimport HomeService from \"../HomeSerivce\";\nimport close from \"../../../assets/images/home/Close.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  closeButton: {\n    float: \"right\",\n    padding: \"10px\",\n    cursor: \"pointer\",\n  },\n  title: {\n    paddinLeft: \"10px\",\n    paddingTop: \"10px\",\n  },\n  dialogHeader: {\n    padding: \"10px\",\n    borderBottom: \"1px solid #E5E5EA\",\n  },\n  checkForm: {\n    padding: \"10px\",\n  },\n  checkbox: {\n    float: \"right\",\n  },\n  label: {\n    paddinLeft: \"10px\",\n    paddingTop: \"10px\",\n  },\n}));\n\nconst Reminder = (props) => {\n  const classes = useStyles();\n  const { open, onClose, days } = props;\n\n  const [checkboxes, setCheckBoxes] = useState({\n    oneDayBefore: false,\n    twoDayBefore: false,\n    threeDayBefore: days === 3 ? false : undefined,\n  });\n\n  useEffect(() => {\n    if (props.entityDate !== null) {\n      let tempCheckBoxes = { ...checkboxes };\n      if (props.entityDate[\"1_day_before\"]) {\n        tempCheckBoxes.oneDayBefore = true;\n      }\n      if (props.entityDate[\"2_day_before\"]) {\n        tempCheckBoxes.twoDayBefore = true;\n      }\n      if (\n        props.entityDate[\"3_day_before\"] &&\n        checkboxes.threeDayBefore !== undefined\n      ) {\n        tempCheckBoxes.threeDayBefore = true;\n      }\n      setCheckBoxes({ ...checkboxes, ...tempCheckBoxes });\n    }\n  }, []);\n\n  const handleReminderClose = async () => {\n    try {\n      if (\n        checkboxes.oneDayBefore === false &&\n        checkboxes.twoDayBefore === false &&\n        !checkboxes.threeDayBefore\n      ) {\n        onClose({ ...checkboxes });\n      } else {\n        let entityDate = {};\n        if (checkboxes.oneDayBefore === true) {\n          entityDate[\"1_day_before\"] = moment(props.eventDate)\n            .subtract(1, \"days\")\n            .format(\"YYYY-MM-DD\");\n        }\n        if (checkboxes.twoDayBefore === true) {\n          entityDate[\"2_day_before\"] = moment(props.eventDate)\n            .subtract(2, \"days\")\n            .format(\"YYYY-MM-DD\");\n        }\n        if (checkboxes.threeDayBefore === true) {\n          entityDate[\"3_day_before\"] = moment(props.eventDate)\n            .subtract(3, \"days\")\n            .format(\"YYYY-MM-DD\");\n        }\n        console.log(checkboxes, entityDate);\n        const response = await HomeService.setReminder(\n          { entity_id: props.id, entity_date: entityDate, entity_type: \"news\" },\n          props.token\n        );\n        onClose({ ...checkboxes });\n      }\n      // const response =await HomeService.setReminder()\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleCheck = (event) => {\n    setCheckBoxes({ ...checkboxes, [event.target.name]: event.target.checked });\n  };\n  return (\n    <Dialog\n      onClose={handleReminderClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}\n      className={classes.dialog}\n      fullWidth={true}\n      maxWidth={\"xs\"}\n    >\n      <div className={classes.dialogHeader}>\n        <img\n          src={close}\n          alt=\"close\"\n          className={classes.closeButton}\n          onClick={handleReminderClose}\n        />\n        <Typography className=\"title\" variant=\"h6\">\n          Remind me\n        </Typography>\n      </div>\n      <div className={classes.checkForm}>\n        <Checkbox\n          className={classes.checkbox}\n          checked={checkboxes.oneDayBefore}\n          onChange={handleCheck}\n          color=\"primary\"\n          name=\"oneDayBefore\"\n        />\n        <Typography className={classes.label}>1 day before</Typography>\n\n        <br />\n        <Checkbox\n          className={classes.checkbox}\n          checked={checkboxes.twoDayBefore}\n          onChange={handleCheck}\n          color=\"primary\"\n          name=\"twoDayBefore\"\n        />\n\n        <Typography className={classes.label}>2 day before</Typography>\n        <br />\n\n        {checkboxes.threeDayBefore !== undefined ? (\n          <>\n            <Checkbox\n              className={classes.checkbox}\n              checked={checkboxes.threeDayBefore}\n              onChange={handleCheck}\n              color=\"primary\"\n              name=\"threeDayBefore\"\n            />\n            <Typography className={classes.label}>3 day before</Typography>\n          </>\n        ) : (\n          \"\"\n        )}\n      </div>\n    </Dialog>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n  };\n};\n\nexport default connect(mapStateToProps)(Reminder);\n"]},"metadata":{},"sourceType":"module"}