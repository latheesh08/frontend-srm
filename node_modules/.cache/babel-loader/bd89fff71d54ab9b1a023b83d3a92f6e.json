{"ast":null,"code":"import axios from \"axios\";\nconst BACKEND_API_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nclass AnnouncementService {\n  createAnnouncement(token) {\n    return axios.post(`${BACKEND_API_URL}/news`, {}, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  saveAnnouncement(params, payload, token) {\n    return axios.put(`${BACKEND_API_URL}/news/${params.id}`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  publishAnnouncement(params, payload, token) {\n    return axios.put(`${BACKEND_API_URL}/news/${params.id}`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  fetchAnnouncements(params, token) {\n    // console.log(token);\n    return axios.get(`${BACKEND_API_URL}/news`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        page: params.currentPage,\n        created_by: params.createdBy\n      }\n    }); // return true;\n  }\n\n  fetchDraftAnnouncement(params, token) {\n    return axios.get(`${BACKEND_API_URL}/news/${params.id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  fetchClasses(token) {\n    return axios.get(`${BACKEND_API_URL}/classes`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n  fetchCategories(token) {\n    return axios.get(`${BACKEND_API_URL}/category`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n\n}\n\nexport default new AnnouncementService();","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/newsAnnouncement/AnnouncementService.js"],"names":["axios","BACKEND_API_URL","process","env","REACT_APP_BACKEND_API_URL","AnnouncementService","createAnnouncement","token","post","headers","Authorization","saveAnnouncement","params","payload","put","id","publishAnnouncement","fetchAnnouncements","get","page","currentPage","created_by","createdBy","fetchDraftAnnouncement","fetchClasses","fetchCategories"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,yBAApC;;AAEA,MAAMC,mBAAN,CAA0B;AACxBC,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACxB,WAAOP,KAAK,CAACQ,IAAN,CACJ,GAAEP,eAAgB,OADd,EAEL,EAFK,EAGL;AACEQ,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AADX,KAHK,CAAP;AAUD;;AACDI,EAAAA,gBAAgB,CAACC,MAAD,EAASC,OAAT,EAAkBN,KAAlB,EAAyB;AACvC,WAAOP,KAAK,CAACc,GAAN,CAAW,GAAEb,eAAgB,SAAQW,MAAM,CAACG,EAAG,EAA/C,EAAkDF,OAAlD,EAA2D;AAChEJ,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AADuD,KAA3D,CAAP;AAMD;;AACDS,EAAAA,mBAAmB,CAACJ,MAAD,EAASC,OAAT,EAAkBN,KAAlB,EAAyB;AAC1C,WAAOP,KAAK,CAACc,GAAN,CAAW,GAAEb,eAAgB,SAAQW,MAAM,CAACG,EAAG,EAA/C,EAAkDF,OAAlD,EAA2D;AAChEJ,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AADuD,KAA3D,CAAP;AAMD;;AACDU,EAAAA,kBAAkB,CAACL,MAAD,EAASL,KAAT,EAAgB;AAChC;AACA,WAAOP,KAAK,CAACkB,GAAN,CAAW,GAAEjB,eAAgB,OAA7B,EAAqC;AAC1CQ,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB,OADiC;AAK1CK,MAAAA,MAAM,EAAE;AACNO,QAAAA,IAAI,EAAEP,MAAM,CAACQ,WADP;AAENC,QAAAA,UAAU,EAAET,MAAM,CAACU;AAFb;AALkC,KAArC,CAAP,CAFgC,CAYhC;AACD;;AACDC,EAAAA,sBAAsB,CAACX,MAAD,EAASL,KAAT,EAAgB;AACpC,WAAOP,KAAK,CAACkB,GAAN,CAAW,GAAEjB,eAAgB,SAAQW,MAAM,CAACG,EAAG,EAA/C,EAAkD;AACvDN,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AAD8C,KAAlD,CAAP;AAMD;;AACDiB,EAAAA,YAAY,CAACjB,KAAD,EAAQ;AAClB,WAAOP,KAAK,CAACkB,GAAN,CAAW,GAAEjB,eAAgB,UAA7B,EAAwC;AAC7CQ,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AADoC,KAAxC,CAAP;AAMD;;AACDkB,EAAAA,eAAe,CAAClB,KAAD,EAAQ;AACrB,WAAOP,KAAK,CAACkB,GAAN,CAAW,GAAEjB,eAAgB,WAA7B,EAAyC;AAC9CQ,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AADqC,KAAzC,CAAP;AAMD;;AAlEuB;;AAqE1B,eAAe,IAAIF,mBAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\nconst BACKEND_API_URL = process.env.REACT_APP_BACKEND_API_URL;\n\nclass AnnouncementService {\n  createAnnouncement(token) {\n    return axios.post(\n      `${BACKEND_API_URL}/news`,\n      {},\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n  }\n  saveAnnouncement(params, payload, token) {\n    return axios.put(`${BACKEND_API_URL}/news/${params.id}`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n  publishAnnouncement(params, payload, token) {\n    return axios.put(`${BACKEND_API_URL}/news/${params.id}`, payload, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n  fetchAnnouncements(params, token) {\n    // console.log(token);\n    return axios.get(`${BACKEND_API_URL}/news`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      params: {\n        page: params.currentPage,\n        created_by: params.createdBy,\n      },\n    });\n    // return true;\n  }\n  fetchDraftAnnouncement(params, token) {\n    return axios.get(`${BACKEND_API_URL}/news/${params.id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n  fetchClasses(token) {\n    return axios.get(`${BACKEND_API_URL}/classes`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n  fetchCategories(token) {\n    return axios.get(`${BACKEND_API_URL}/category`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n  }\n}\n\nexport default new AnnouncementService();\n"]},"metadata":{},"sourceType":"module"}