{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/home/studentHome/Reminder.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport close from \"../../../assets/images/home/Close.svg\";\nconst useStyles = makeStyles(theme => ({\n  closeButton: {\n    float: 'right',\n    padding: '10px',\n    cursor: 'pointer'\n  },\n  title: {\n    paddinLeft: '10px',\n    paddingTop: '10px'\n  },\n  dialogHeader: {\n    padding: '10px',\n    borderBottom: '1px solid #E5E5EA'\n  },\n  checkForm: {\n    padding: '10px'\n  },\n  checkbox: {\n    float: 'right'\n  },\n  label: {\n    paddinLeft: '10px',\n    paddingTop: '10px'\n  }\n}));\n\nconst Reminder = props => {\n  const classes = useStyles();\n  const {\n    open,\n    onClose,\n    days\n  } = props;\n  const [checkboxes, setCheckBoxes] = useState({\n    oneDayBefore: false,\n    twoDayBefore: false,\n    threeDayBefore: days === 3 ? false : undefined\n  });\n\n  const handleReminderClose = () => {\n    onClose({ ...checkboxes\n    });\n  };\n\n  const handleCheck = event => {\n    setCheckBoxes({ ...checkboxes,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Dialog, {\n    onClose: handleReminderClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    className: classes.dialog,\n    fullWidth: true,\n    maxWidth: 'xs',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.dialogHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: close,\n    alt: \"close\",\n    className: classes.closeButton,\n    onClick: handleReminderClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: \"title\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"Remind me\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.checkForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    className: classes.checkbox,\n    checked: checkboxes.oneDayBefore,\n    onChange: handleCheck,\n    color: \"primary\",\n    name: \"oneDayBefore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"1 day before\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    className: classes.checkbox,\n    checked: checkboxes.twoDayBefore,\n    onChange: handleCheck,\n    color: \"primary\",\n    name: \"twoDayBefore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"2 day before\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }), checkboxes.threeDayBefore !== undefined ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Checkbox, {\n    className: classes.checkbox,\n    checked: checkboxes.threeDayBefore,\n    onChange: handleCheck,\n    color: \"primary\",\n    name: \"threeDayBefore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"3 day before\")) : ''));\n};\n\nexport default Reminder;","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/home/studentHome/Reminder.js"],"names":["React","useState","makeStyles","Dialog","Typography","Checkbox","useStyles","theme","closeButton","float","padding","cursor","title","paddinLeft","paddingTop","dialogHeader","borderBottom","checkForm","checkbox","label","Reminder","props","classes","open","onClose","days","checkboxes","setCheckBoxes","oneDayBefore","twoDayBefore","threeDayBefore","undefined","handleReminderClose","handleCheck","event","target","name","checked","dialog","close"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport Typography from '@material-ui/core/Typography';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport close from '../../../assets/images/home/Close.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  closeButton: {\n    float: 'right',\n    padding: '10px',\n    cursor: 'pointer',\n  },\n  title: {\n    paddinLeft: '10px',\n    paddingTop: '10px',\n  },\n  dialogHeader: {\n    padding: '10px',\n    borderBottom: '1px solid #E5E5EA',\n  },\n  checkForm: {\n    padding: '10px',\n  },\n  checkbox: {\n    float: 'right',\n  },\n  label: {\n    paddinLeft: '10px',\n    paddingTop: '10px',\n  },\n}));\n\nconst Reminder = (props) => {\n  const classes = useStyles();\n  const { open, onClose, days } = props;\n\n  const [checkboxes, setCheckBoxes] = useState({\n    oneDayBefore: false,\n    twoDayBefore: false,\n    threeDayBefore: days === 3 ? false : undefined,\n  });\n\n  const handleReminderClose = () => {\n    onClose({ ...checkboxes });\n  };\n\n  const handleCheck = (event) => {\n    setCheckBoxes({ ...checkboxes, [event.target.name]: event.target.checked });\n  };\n  return (\n    <Dialog\n      onClose={handleReminderClose}\n      aria-labelledby='simple-dialog-title'\n      open={open}\n      className={classes.dialog}\n      fullWidth={true}\n      maxWidth={'xs'}\n    >\n      <div className={classes.dialogHeader}>\n        <img\n          src={close}\n          alt='close'\n          className={classes.closeButton}\n          onClick={handleReminderClose}\n        />\n        <Typography className='title' variant='h6'>\n          Remind me\n        </Typography>\n      </div>\n      <div className={classes.checkForm}>\n        <Checkbox\n          className={classes.checkbox}\n          checked={checkboxes.oneDayBefore}\n          onChange={handleCheck}\n          color='primary'\n          name='oneDayBefore'\n        />\n        <Typography className={classes.label}>1 day before</Typography>\n\n        <br />\n        <Checkbox\n          className={classes.checkbox}\n          checked={checkboxes.twoDayBefore}\n          onChange={handleCheck}\n          color='primary'\n          name='twoDayBefore'\n        />\n\n        <Typography className={classes.label}>2 day before</Typography>\n        <br />\n\n        {checkboxes.threeDayBefore !== undefined ? (\n          <>\n            <Checkbox\n              className={classes.checkbox}\n              checked={checkboxes.threeDayBefore}\n              onChange={handleCheck}\n              color='primary'\n              name='threeDayBefore'\n            />\n            <Typography className={classes.label}>3 day before</Typography>\n          </>\n        ) : (\n          ''\n        )}\n      </div>\n    </Dialog>\n  );\n};\n\nexport default Reminder;\n"]},"metadata":{},"sourceType":"module"}