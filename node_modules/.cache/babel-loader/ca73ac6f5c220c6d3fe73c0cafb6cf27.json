{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/Assignment/Homework.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useLocation, useRouteMatch, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AnnouncementSection from './AnnouncementSection';\nimport HomeworkService from './HomeworkService';\nimport Box from '@material-ui/core/Grid';\nimport CreateAnnouncement from './teacher/CreateAnnouncement';\nimport axios from 'axios';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    width: '100%',\n    backgroundColor: theme.palette.mainBackground,\n    height: '100%',\n    marign: '0',\n    padding: '0',\n    overflowY: 'auto',\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    }\n  },\n  content: {\n    flexGrow: '1',\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '0',\n    padding: '0 20px 20px 20px'\n  },\n  panel: {\n    flexGrow: '1',\n    overflow: 'auto',\n    minHeight: '100%',\n    scrollbarWidth: 'none',\n    '&::-webkit-scrollbar': {\n      display: 'none'\n    }\n  }\n}));\n\nconst Homework = props => {\n  const classes = useStyles();\n  const location = useLocation();\n  const {\n    id\n  } = useParams();\n  const [classState, setClassState] = useState(null);\n  const [category, setcategory] = useState(null);\n  const [isClassLoading, setIsClassLoading] = useState(true);\n  useEffect(() => {\n    const fetchClasses = async () => {\n      const classesResponse = await HomeworkService.fetchClasses(props.token);\n      let initialClassState = {};\n      classesResponse.data.data.forEach(className => {\n        initialClassState[className.class_name] = false;\n      });\n      const categoryResponse = await HomeworkService.fetchCategories(props.token);\n      let categoryList = {};\n      categoryResponse.data.data.forEach(categoryData => {\n        categoryList[categoryData.category_name] = categoryData.id;\n      });\n      setcategory({ ...categoryList\n      });\n      setClassState({ ...initialClassState\n      });\n    };\n\n    if (location.pathname === `/create-homework/${id}`) {\n      fetchClasses();\n    }\n  }, []);\n  useEffect(() => {\n    if (classState !== null && category != null) {\n      setIsClassLoading(false);\n    }\n  }, [classState, category]);\n  console.log(isClassLoading);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    id: \"scrollable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, location.pathname === '/assignment' ? /*#__PURE__*/React.createElement(AnnouncementSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }) : location.pathname === `/create-homework/${id}` && isClassLoading === false ? /*#__PURE__*/React.createElement(Box, {\n    p: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateAnnouncement, {\n    classState: classState,\n    categories: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })) : '');\n};\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token\n  };\n};\n\nexport default connect(mapStateToProps)(Homework);","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/Assignment/Homework.js"],"names":["React","useEffect","useState","useLocation","useRouteMatch","useParams","connect","makeStyles","Grid","AnnouncementSection","HomeworkService","Box","CreateAnnouncement","axios","useStyles","theme","container","width","backgroundColor","palette","mainBackground","height","marign","padding","overflowY","display","content","flexGrow","flexDirection","minHeight","panel","overflow","scrollbarWidth","Homework","props","classes","location","id","classState","setClassState","category","setcategory","isClassLoading","setIsClassLoading","fetchClasses","classesResponse","token","initialClassState","data","forEach","className","class_name","categoryResponse","fetchCategories","categoryList","categoryData","category_name","pathname","console","log","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation, useRouteMatch, useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AnnouncementSection from './AnnouncementSection';\nimport HomeworkService from './HomeworkService';\nimport Box from '@material-ui/core/Grid';\nimport CreateAnnouncement from './teacher/CreateAnnouncement';\nimport axios from 'axios';\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    width: '100%',\n    backgroundColor: theme.palette.mainBackground,\n    height: '100%',\n    marign: '0',\n    padding: '0',\n    overflowY: 'auto',\n    '&::-webkit-scrollbar': {\n      display: 'none',\n    },\n  },\n  content: {\n    flexGrow: '1',\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '0',\n    padding: '0 20px 20px 20px',\n  },\n  panel: {\n    flexGrow: '1',\n    overflow: 'auto',\n    minHeight: '100%',\n    scrollbarWidth: 'none',\n    '&::-webkit-scrollbar': {\n      display: 'none',\n    },\n  },\n}));\nconst Homework = (props) => {\n  const classes = useStyles();\n  const location = useLocation();\n  const { id } = useParams();\n  const [classState, setClassState] = useState(null);\n  const [category, setcategory] = useState(null);\n  const [isClassLoading, setIsClassLoading] = useState(true);\n  useEffect(() => {\n    const fetchClasses = async () => {\n      const classesResponse = await HomeworkService.fetchClasses(props.token);\n      let initialClassState = {};\n      classesResponse.data.data.forEach((className) => {\n        initialClassState[className.class_name] = false;\n      });\n\n      const categoryResponse = await HomeworkService.fetchCategories(\n        props.token\n      );\n      let categoryList = {};\n      categoryResponse.data.data.forEach((categoryData) => {\n        categoryList[categoryData.category_name] = categoryData.id;\n      });\n      setcategory({ ...categoryList });\n      setClassState({ ...initialClassState });\n    };\n    if (location.pathname === `/create-homework/${id}`) {\n      fetchClasses();\n    }\n  }, []);\n  useEffect(() => {\n    if (classState !== null && category != null) {\n      setIsClassLoading(false);\n    }\n  }, [classState, category]);\n  console.log(isClassLoading);\n  return (\n    <div className={classes.container} id='scrollable'>\n      {location.pathname === '/assignment' ? (\n        <AnnouncementSection />\n      ) : location.pathname === `/create-homework/${id}` &&\n        isClassLoading === false ? (\n        <Box p={3}>\n          <CreateAnnouncement classState={classState} categories={category} />\n          <br />\n          <br />\n          <br />\n        </Box>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    token: state.auth.token,\n  };\n};\n\nexport default connect(mapStateToProps)(Homework);\n"]},"metadata":{},"sourceType":"module"}