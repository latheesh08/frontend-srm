{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/newsAnnouncement/teacher/NewsCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport * as moment from \"moment\";\nimport { dateDiff } from \"../../../shared/datediff\";\nimport EditIcon from \"../../../assets/images/Edit Button.svg\";\nimport { Box, CardHeader, CardMedia, CardActions } from \"@material-ui/core\"; // import testImg from \"../../assets/images/home/testImg.png\";\n\nconst useStyle = makeStyles(theme => ({\n  card: {\n    width: \"100%\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    borderRadius: \"10px\",\n    boxShadow: \"none\"\n  },\n  reminder: {\n    width: \"100%\",\n    textAlign: \"right\",\n    cursor: \"pointer\"\n  },\n  NewsHeader: {\n    padding: \"8px 16px 8px 16px !important\",\n    \"& span\": {\n      cursor: \"pointer\",\n      \"&:hover\": {\n        textDecoration: \"underline\"\n      }\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"8px 16px 8px 16px !important\",\n      \"& span\": {\n        fontSize: \"16px\"\n      }\n    }\n  },\n  cardContent: {\n    padding: \"0px 16px 0px 16px\"\n  },\n  contentMargin: {\n    marginTop: \"16px\"\n  },\n  announcementText: {\n    fontStyle: \"normal\",\n    fontSize: \"14px\"\n  },\n  announcementImg: {\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    \"& img\": {\n      maxWidth: \"100%\",\n      border: `1px solid ${theme.palette.common.deluge}`,\n      borderRadius: \"4px\"\n    }\n  },\n  statusText: {\n    fontStyle: \"normal\",\n    textTransform: \"uppercase\",\n    paddingTop: \"10px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"13px\"\n    }\n  },\n  cardActionStyle: {\n    padding: \"8px 16px 8px 16px\",\n    color: \"#6C757D\"\n  },\n  contentCenter: {\n    textAlign: \"right\",\n    height: \"50%\",\n    \"& img\": {\n      marginTop: \"25px\",\n      width: \"25px\",\n      cursor: \"pointer\",\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: \"10px\"\n      }\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      textAlign: \"right\"\n    }\n  },\n  createdDate: {\n    padding: \"5px 0 5px 0\"\n  },\n  editBtnGrid: {\n    textAlign: \"right\"\n  },\n  editBtn: {\n    marginLeft: \"auto\",\n    cursor: \"pointer\"\n  },\n  announcementImg: {\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    paddingBottom: \"10px\",\n    margin: \"0\",\n    \"& img\": {\n      maxWidth: \"100%\",\n      border: `1px solid ${theme.palette.common.deluge}`,\n      borderRadius: \"4px\"\n    }\n  }\n}));\n\nconst NewsCard = props => {\n  const classes = useStyle();\n  const history = useHistory();\n  const statusColors = {\n    draft: \"red\",\n    published: \"#7B72AF\",\n    active: \"green\"\n  };\n  const {\n    id,\n    status,\n    title,\n    summary,\n    media_url,\n    created_at\n  } = props.announcement;\n\n  const handleEditAnnouncement = () => {\n    history.push(`/create-announcement/${id}`);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"center\",\n    alignContent: \"center\",\n    className: classes.cardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.NewsHeader,\n    action: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n      style: {\n        color: statusColors[status]\n      },\n      className: classes.statusText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, status)),\n    title: /*#__PURE__*/React.createElement(\"span\", {\n      onClick: event => {\n        history.push(`/news/${id}`);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, title ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, title) : /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, \"N/A\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.cardContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, media_url && /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    className: `${classes.announcementImg} ${classes.contentMargin}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: media_url,\n    alt: \"Announcement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  })), summary ? /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, summary) : /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, \"N/A\")), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.cardActionStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.createdDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 17\n    }\n  }, `Created at: ${moment(created_at).format(\"DD MMM YY\")}`)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    className: classes.editBtnGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    className: classes.editBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, status !== \"published\" ? /*#__PURE__*/React.createElement(\"img\", {\n    src: EditIcon,\n    alt: \"Edit Icon\",\n    onClick: handleEditAnnouncement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }) : \"\")))))));\n};\n\nexport default NewsCard;","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/newsAnnouncement/teacher/NewsCard.js"],"names":["React","useState","useEffect","Grid","Card","CardContent","makeStyles","Typography","useHistory","moment","dateDiff","Box","CardHeader","CardMedia","CardActions","useStyle","theme","card","width","margin","marginTop","borderRadius","boxShadow","reminder","textAlign","cursor","NewsHeader","padding","textDecoration","breakpoints","down","fontSize","cardContent","contentMargin","announcementText","fontStyle","announcementImg","justifyContent","maxWidth","border","palette","common","deluge","statusText","textTransform","paddingTop","cardActionStyle","color","contentCenter","height","createdDate","editBtnGrid","editBtn","marginLeft","paddingBottom","NewsCard","props","classes","history","statusColors","draft","published","active","id","status","title","summary","media_url","created_at","announcement","handleEditAnnouncement","push","cardContainer","event","format","EditIcon"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { useHistory } from \"react-router-dom\";\nimport * as moment from \"moment\";\nimport { dateDiff } from \"../../../shared/datediff\";\nimport EditIcon from \"../../../assets/images/Edit Button.svg\";\nimport { Box, CardHeader, CardMedia, CardActions } from \"@material-ui/core\";\n// import testImg from \"../../assets/images/home/testImg.png\";\n\nconst useStyle = makeStyles((theme) => ({\n  card: {\n    width: \"100%\",\n    margin: \"auto\",\n    marginTop: \"20px\",\n    borderRadius: \"10px\",\n    boxShadow: \"none\",\n  },\n  reminder: {\n    width: \"100%\",\n    textAlign: \"right\",\n    cursor: \"pointer\",\n  },\n  NewsHeader: {\n    padding: \"8px 16px 8px 16px !important\",\n    \"& span\": {\n      cursor: \"pointer\",\n      \"&:hover\": {\n        textDecoration: \"underline\",\n      },\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"8px 16px 8px 16px !important\",\n      \"& span\": {\n        fontSize: \"16px\",\n      },\n    },\n  },\n  cardContent: {\n    padding: \"0px 16px 0px 16px\",\n  },\n  contentMargin: {\n    marginTop: \"16px\",\n  },\n  announcementText: {\n    fontStyle: \"normal\",\n    fontSize: \"14px\",\n  },\n  announcementImg: {\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    \"& img\": {\n      maxWidth: \"100%\",\n      border: `1px solid ${theme.palette.common.deluge}`,\n      borderRadius: \"4px\",\n    },\n  },\n  statusText: {\n    fontStyle: \"normal\",\n    textTransform: \"uppercase\",\n    paddingTop: \"10px\",\n    [theme.breakpoints.down(\"xs\")]: {\n      fontSize: \"13px\",\n    },\n  },\n  cardActionStyle: {\n    padding: \"8px 16px 8px 16px\",\n    color: \"#6C757D\",\n  },\n  contentCenter: {\n    textAlign: \"right\",\n    height: \"50%\",\n\n    \"& img\": {\n      marginTop: \"25px\",\n      width: \"25px\",\n      cursor: \"pointer\",\n\n      [theme.breakpoints.down(\"xs\")]: {\n        marginTop: \"10px\",\n      },\n    },\n    [theme.breakpoints.down(\"xs\")]: {\n      textAlign: \"right\",\n    },\n  },\n  createdDate: {\n    padding: \"5px 0 5px 0\",\n  },\n  editBtnGrid: {\n    textAlign: \"right\",\n  },\n  editBtn: {\n    marginLeft: \"auto\",\n    cursor: \"pointer\",\n  },\n  announcementImg: {\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    paddingBottom: \"10px\",\n    margin: \"0\",\n    \"& img\": {\n      maxWidth: \"100%\",\n      border: `1px solid ${theme.palette.common.deluge}`,\n      borderRadius: \"4px\",\n    },\n  },\n}));\n\nconst NewsCard = (props) => {\n  const classes = useStyle();\n  const history = useHistory();\n  const statusColors = {\n    draft: \"red\",\n    published: \"#7B72AF\",\n    active: \"green\",\n  };\n  const {\n    id,\n    status,\n    title,\n    summary,\n    media_url,\n    created_at,\n  } = props.announcement;\n\n  const handleEditAnnouncement = () => {\n    history.push(`/create-announcement/${id}`);\n  };\n  return (\n    <>\n      <Grid\n        container\n        direction=\"row\"\n        justify=\"center\"\n        alignContent=\"center\"\n        className={classes.cardContainer}\n      >\n        <Card className={classes.card}>\n          <CardHeader\n            className={classes.NewsHeader}\n            action={\n              <>\n                <Typography\n                  style={{\n                    color: statusColors[status],\n                  }}\n                  className={classes.statusText}\n                >\n                  {status}\n                </Typography>\n              </>\n            }\n            title={\n              <span\n                onClick={(event) => {\n                  history.push(`/news/${id}`);\n                }}\n              >\n                {title ? (\n                  <Typography variant=\"h6\">{title}</Typography>\n                ) : (\n                  <Typography variant=\"h6\">N/A</Typography>\n                )}\n              </span>\n            }\n          />\n\n          {/* {media_url ? <img src={media_url} /> : \"\"} */}\n\n          <CardContent className={classes.cardContent}>\n            {media_url && (\n              <Grid\n                container\n                direction=\"row\"\n                className={`${classes.announcementImg} ${classes.contentMargin}`}\n              >\n                <img src={media_url} alt=\"Announcement\"></img>\n              </Grid>\n            )}\n            {summary ? (\n              <Typography>{summary}</Typography>\n            ) : (\n              <Typography>N/A</Typography>\n            )}\n          </CardContent>\n          <CardActions className={classes.cardActionStyle}>\n            <Grid container>\n              <Grid item xs={6}>\n                <Typography\n                  className={classes.createdDate}\n                >{`Created at: ${moment(created_at).format(\n                  \"DD MMM YY\"\n                )}`}</Typography>\n              </Grid>\n              <Grid item xs={6} className={classes.editBtnGrid}>\n                <Box className={classes.editBtn}>\n                  {status !== \"published\" ? (\n                    <img\n                      src={EditIcon}\n                      alt=\"Edit Icon\"\n                      onClick={handleEditAnnouncement}\n                    />\n                  ) : (\n                    \"\"\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </CardActions>\n          {/* <CardContent className={classes.cardContent}>\n            <Grid container direction=\"row\">\n              <Grid item xs={10} className={classes.content}>\n                {title ? (\n                  <Grid container direction=\"row\">\n                    <Typography variant=\"h6\" className={classes.title}>\n                      {title}\n                    </Typography>\n                  </Grid>\n                ) : (\n                  <Typography variant=\"h6\" className={classes.title}>\n                    N/A\n                  </Typography>\n                )}\n                {media_url ? (\n                  <Grid\n                    container\n                    direction=\"row\"\n                    className={classes.announcementImg}\n                  >\n                    <img src={media_url} alt=\"Announcement\"></img>\n                  </Grid>\n                ) : (\n                  \"\"\n                )}\n                {summary ? (\n                  <Grid container direction=\"row\">\n                    <Typography className={classes.announcementText}>\n                      {summary}\n                    </Typography>\n                  </Grid>\n                ) : (\n                  <Typography className={classes.announcementText}>\n                    N/A\n                  </Typography>\n                )}\n                <Typography>{`Created at: ${moment(created_at).format(\n                  \"DD MMM YY\"\n                )}`}</Typography>\n              </Grid>\n              <Grid item xs={2} className={classes.actions}>\n                <Box className={classes.contentCenter}>\n                  <Typography\n                    style={{\n                      color: statusColors[status],\n                    }}\n                    className={classes.statusText}\n                  >\n                    {status}\n                  </Typography>\n                </Box>\n                <Box className={classes.contentCenter}>\n                  {status !== \"published\" ? (\n                    <img\n                      src={EditIcon}\n                      alt=\"Edit Icon\"\n                      onClick={handleEditAnnouncement}\n                    />\n                  ) : (\n                    \"\"\n                  )}\n                </Box>\n              </Grid>\n            </Grid>\n          </CardContent> */}\n        </Card>\n      </Grid>\n    </>\n  );\n};\n\nexport default NewsCard;\n"]},"metadata":{},"sourceType":"module"}