{"ast":null,"code":"var _jsxFileName = \"/Users/star/Desktop/frontend-srm/src/app/home/teacherHome/tasks/TaskContent.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Box, Grid } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RedFlagIcon from \"../../../../assets/images/home/teacher/RedFlag.svg\";\nimport YellowFlagIcon from \"../../../../assets/images/home/teacher/YellowFlag.svg\";\nimport GreenTickIcon from \"../../../../assets/images/home/teacher/GreenTick.svg\";\nimport HomeSerivce from '../../HomeSerivce';\nconst useStyle = makeStyles(theme => ({\n  taskDiv: {\n    height: '100%',\n    display: 'table',\n    width: '100%'\n  },\n  title: {\n    textTransform: 'uppercase',\n    fontWeight: 800,\n    letterSpacing: '1px',\n    color: `${theme.palette.common.bastille}`\n  },\n  taskIcon: {\n    transform: 'translateY(5px)'\n  },\n  flag: {\n    cursor: 'pointer',\n    width: '14px'\n  },\n  taskheader: {\n    width: '100%',\n    display: 'table-row',\n    height: '30px'\n  },\n  tasks: {\n    width: '100%',\n    height: '100%',\n    display: 'table-row'\n  },\n  addTaskIcon: {\n    float: 'right',\n    cursor: 'pointer',\n    bottom: 0\n  },\n  taskCard: {\n    borderRadius: '10px',\n    height: '100%'\n  },\n  loading: {\n    textAlign: 'center',\n    justifyContent: 'center',\n    margin: 'auto'\n  },\n  CardContent: {\n    padding: '0 0 0 10px !important',\n    margin: '10px 0 0 0',\n    height: '345px',\n    overflow: 'auto',\n    '&::-webkit-scrollbar': {\n      width: '0.4em'\n    },\n    '&::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.2)',\n      outline: 'none',\n      borderRadius: '5px'\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: `${theme.palette.primary.main}`,\n      borderRadius: '5px'\n    },\n    '& .taskContentDiv': {\n      marginTop: '10px'\n    }\n  },\n  taskContentStyle: {\n    cursor: 'pointer',\n    display: 'flex'\n  },\n  taskContDiv: {\n    marginLeft: '20px'\n  }\n}));\n\nconst TaskContent = props => {\n  const classes = useStyle();\n  const [hasMore, setHasMore] = useState(true);\n  const [openEditor, setOpenEditor] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const styleContent = {\n    done: ['line-through', '#C0C0C3'],\n    pending: ['none', 'black'],\n    'on-going': ['none', 'black']\n  };\n\n  const fetchTask = async () => {\n    const token = localStorage.getItem('srmToken');\n    const response = await HomeSerivce.getTask(token);\n    setTasks(response.data.data.data);\n    let next_page_url = response.data.data.next_page_url;\n\n    if (next_page_url === null) {\n      setHasMore(false);\n    } else {\n      setHasMore(true);\n    }\n  };\n\n  async function updateFlag(idTask, contentTask, statusTask) {\n    const token = localStorage.getItem('srmToken'); // console.log('Update Flag: ', idTask, contentTask, statusTask);\n\n    const response = await HomeSerivce.updateTask(token, idTask, {\n      content: contentTask,\n      status: statusTask\n    });\n    fetchTask();\n    closeEditor();\n  }\n\n  useEffect(() => {\n    // console.log('Task Content');\n    let isAnnouncementLoading = true;\n\n    const fetchTask = async () => {\n      try {\n        const token = localStorage.getItem('srmToken');\n        const response = await HomeSerivce.getTask(token);\n\n        if (isAnnouncementLoading) {\n          setTasks(response.data.data.data);\n          let next_page_url = response.data.data.next_page_url;\n\n          if (next_page_url === null) {\n            setHasMore(false);\n          } else {\n            setHasMore(true);\n          }\n\n          setIsLoading(false);\n          setNextUrl(response.data.data.next_page_url); // console.log(response.data.data.data);\n        }\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    };\n\n    fetchTask();\n    return () => {\n      isAnnouncementLoading = false;\n    };\n  }, []);\n\n  const closeEditor = () => {\n    setOpenEditor(false);\n  };\n\n  const fetchMoreTasks = () => {\n    const fetchTasks = async () => {\n      const token = localStorage.getItem('srmToken');\n      const response = await HomeSerivce.getMoreTask(token, nextUrl);\n      let nextData = response.data.data.data;\n      setTasks([...tasks, ...response.data.data.data]);\n      setIsLoading(false);\n      let next_page_url = response.data.data.next_page_url;\n\n      if (next_page_url === null) {\n        setHasMore(false);\n      }\n    };\n\n    fetchTasks();\n  };\n\n  const handleChangeFlag = (event, statusTask, idTask, contentTask) => {\n    if (statusTask === 'pending') {\n      updateFlag(idTask, contentTask, 'on-going');\n    }\n\n    if (statusTask === 'on-going') {\n      updateFlag(idTask, contentTask, 'done');\n    }\n\n    if (statusTask === 'done') {\n      updateFlag(idTask, contentTask, 'pending');\n    }\n  };\n\n  const setFlag = (status, id, content) => {\n    if (status === 'pending') {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: RedFlagIcon,\n        alt: \"Pending task\",\n        className: classes.flag,\n        onClick: event => {\n          handleChangeFlag(event, status, id, content);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      });\n    } else if (status === 'on-going') {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: YellowFlagIcon,\n        alt: \"Pending task\",\n        className: classes.flag,\n        onClick: event => {\n          handleChangeFlag(event, status, id, content);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        src: GreenTickIcon,\n        alt: \"Pending task\",\n        className: classes.flag,\n        onClick: event => {\n          handleChangeFlag(event, status, id, content);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.CardContent,\n    id: \"scrollable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InfiniteScroll, {\n    dataLength: tasks.length,\n    next: fetchMoreTasks,\n    hasMore: hasMore,\n    loader: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 15\n      }\n    })),\n    scrollableTarget: \"scrollable\",\n    scrollThreshold: 0.5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, isLoading === false ? tasks.map(task => {\n    return /*#__PURE__*/React.createElement(Box, {\n      key: task.id,\n      className: \"taskContentDiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.taskContentStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 27\n      }\n    }, setFlag(task.status, task.id, task.content))), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.taskContDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.taskContent,\n      onClick: event => {\n        props.handleEditTask(task.id, task.content, task.status);\n      },\n      style: {\n        textDecoration: styleContent[task.status][0],\n        textDecorationColor: '#C0C0C3',\n        color: styleContent[task.status][1]\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, task.content))), tasks.length === 0 && hasMore === false ? /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 27\n      }\n    }, \"No task available\") : '')));\n  }) : ''), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TaskContent;","map":{"version":3,"sources":["/Users/star/Desktop/frontend-srm/src/app/home/teacherHome/tasks/TaskContent.js"],"names":["React","useState","useEffect","makeStyles","Typography","Box","Grid","CardContent","InfiniteScroll","CircularProgress","HomeSerivce","useStyle","theme","taskDiv","height","display","width","title","textTransform","fontWeight","letterSpacing","color","palette","common","bastille","taskIcon","transform","flag","cursor","taskheader","tasks","addTaskIcon","float","bottom","taskCard","borderRadius","loading","textAlign","justifyContent","margin","padding","overflow","outline","backgroundColor","primary","main","marginTop","taskContentStyle","taskContDiv","marginLeft","TaskContent","props","classes","hasMore","setHasMore","openEditor","setOpenEditor","setTasks","nextUrl","setNextUrl","isLoading","setIsLoading","styleContent","done","pending","fetchTask","token","localStorage","getItem","response","getTask","data","next_page_url","updateFlag","idTask","contentTask","statusTask","updateTask","content","status","closeEditor","isAnnouncementLoading","error","console","log","fetchMoreTasks","fetchTasks","getMoreTask","nextData","handleChangeFlag","event","setFlag","id","RedFlagIcon","YellowFlagIcon","GreenTickIcon","length","map","task","taskContent","handleEditTask","textDecoration","textDecorationColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Box, Grid } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RedFlagIcon from '../../../../assets/images/home/teacher/RedFlag.svg';\nimport YellowFlagIcon from '../../../../assets/images/home/teacher/YellowFlag.svg';\nimport GreenTickIcon from '../../../../assets/images/home/teacher/GreenTick.svg';\n\nimport HomeSerivce from '../../HomeSerivce';\n\nconst useStyle = makeStyles((theme) => ({\n  taskDiv: {\n    height: '100%',\n    display: 'table',\n    width: '100%',\n  },\n  title: {\n    textTransform: 'uppercase',\n    fontWeight: 800,\n    letterSpacing: '1px',\n    color: `${theme.palette.common.bastille}`,\n  },\n  taskIcon: {\n    transform: 'translateY(5px)',\n  },\n  flag: {\n    cursor: 'pointer',\n    width: '14px',\n  },\n  taskheader: {\n    width: '100%',\n    display: 'table-row',\n    height: '30px',\n  },\n  tasks: {\n    width: '100%',\n    height: '100%',\n    display: 'table-row',\n  },\n  addTaskIcon: {\n    float: 'right',\n    cursor: 'pointer',\n    bottom: 0,\n  },\n  taskCard: {\n    borderRadius: '10px',\n    height: '100%',\n  },\n  loading: {\n    textAlign: 'center',\n    justifyContent: 'center',\n    margin: 'auto',\n  },\n  CardContent: {\n    padding: '0 0 0 10px !important',\n    margin: '10px 0 0 0',\n    height: '345px',\n    overflow: 'auto',\n    '&::-webkit-scrollbar': {\n      width: '0.4em',\n    },\n    '&::-webkit-scrollbar-track': {\n      '-webkit-box-shadow': 'inset 0 0 6px rgba(0,0,0,0.2)',\n      outline: 'none',\n      borderRadius: '5px',\n    },\n    '&::-webkit-scrollbar-thumb': {\n      backgroundColor: `${theme.palette.primary.main}`,\n      borderRadius: '5px',\n    },\n    '& .taskContentDiv': {\n      marginTop: '10px',\n    },\n  },\n  taskContentStyle: {\n    cursor: 'pointer',\n    display: 'flex',\n  },\n  taskContDiv: {\n    marginLeft: '20px',\n  },\n}));\n\nconst TaskContent = (props) => {\n  const classes = useStyle();\n  const [hasMore, setHasMore] = useState(true);\n  const [openEditor, setOpenEditor] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [nextUrl, setNextUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n\n  const styleContent = {\n    done: ['line-through', '#C0C0C3'],\n    pending: ['none', 'black'],\n    'on-going': ['none', 'black'],\n  };\n  const fetchTask = async () => {\n    const token = localStorage.getItem('srmToken');\n    const response = await HomeSerivce.getTask(token);\n    setTasks(response.data.data.data);\n    let next_page_url = response.data.data.next_page_url;\n    if (next_page_url === null) {\n      setHasMore(false);\n    } else {\n      setHasMore(true);\n    }\n  };\n\n  async function updateFlag(idTask, contentTask, statusTask) {\n    const token = localStorage.getItem('srmToken');\n    // console.log('Update Flag: ', idTask, contentTask, statusTask);\n    const response = await HomeSerivce.updateTask(token, idTask, {\n      content: contentTask,\n      status: statusTask,\n    });\n    fetchTask();\n    closeEditor();\n  }\n\n  useEffect(() => {\n    // console.log('Task Content');\n    let isAnnouncementLoading = true;\n    const fetchTask = async () => {\n      try {\n        const token = localStorage.getItem('srmToken');\n        const response = await HomeSerivce.getTask(token);\n        if (isAnnouncementLoading) {\n          setTasks(response.data.data.data);\n          let next_page_url = response.data.data.next_page_url;\n          if (next_page_url === null) {\n            setHasMore(false);\n          } else {\n            setHasMore(true);\n          }\n          setIsLoading(false);\n\n          setNextUrl(response.data.data.next_page_url);\n          // console.log(response.data.data.data);\n        }\n      } catch (error) {\n        console.log('Error: ', error);\n      }\n    };\n    fetchTask();\n    return () => {\n      isAnnouncementLoading = false;\n    };\n  }, []);\n\n  const closeEditor = () => {\n    setOpenEditor(false);\n  };\n\n  const fetchMoreTasks = () => {\n    const fetchTasks = async () => {\n      const token = localStorage.getItem('srmToken');\n      const response = await HomeSerivce.getMoreTask(token, nextUrl);\n      let nextData = response.data.data.data;\n      setTasks([...tasks, ...response.data.data.data]);\n      setIsLoading(false);\n      let next_page_url = response.data.data.next_page_url;\n      if (next_page_url === null) {\n        setHasMore(false);\n      }\n    };\n    fetchTasks();\n  };\n\n  const handleChangeFlag = (event, statusTask, idTask, contentTask) => {\n    if (statusTask === 'pending') {\n      updateFlag(idTask, contentTask, 'on-going');\n    }\n    if (statusTask === 'on-going') {\n      updateFlag(idTask, contentTask, 'done');\n    }\n    if (statusTask === 'done') {\n      updateFlag(idTask, contentTask, 'pending');\n    }\n  };\n\n  const setFlag = (status, id, content) => {\n    if (status === 'pending') {\n      return (\n        <img\n          src={RedFlagIcon}\n          alt='Pending task'\n          className={classes.flag}\n          onClick={(event) => {\n            handleChangeFlag(event, status, id, content);\n          }}\n        />\n      );\n    } else if (status === 'on-going') {\n      return (\n        <img\n          src={YellowFlagIcon}\n          alt='Pending task'\n          className={classes.flag}\n          onClick={(event) => {\n            handleChangeFlag(event, status, id, content);\n          }}\n        />\n      );\n    } else {\n      return (\n        <img\n          src={GreenTickIcon}\n          alt='Pending task'\n          className={classes.flag}\n          onClick={(event) => {\n            handleChangeFlag(event, status, id, content);\n          }}\n        />\n      );\n    }\n  };\n\n  return (\n    <>\n      <CardContent className={classes.CardContent} id='scrollable'>\n        <InfiniteScroll\n          dataLength={tasks.length}\n          next={fetchMoreTasks}\n          hasMore={hasMore}\n          loader={\n            <>\n              <div className={classes.loading}>\n                <CircularProgress />\n              </div>\n              <br />\n            </>\n          }\n          scrollableTarget='scrollable'\n          scrollThreshold={0.5}\n        >\n          {isLoading === false\n            ? tasks.map((task) => {\n                return (\n                  <Box key={task.id} className='taskContentDiv'>\n                    <Grid container>\n                      <Grid item xs={12} className={classes.taskContentStyle}>\n                        <div>\n                          <span>\n                            {setFlag(task.status, task.id, task.content)}\n                          </span>\n                        </div>\n                        <div className={classes.taskContDiv}>\n                          <Typography>\n                            <span\n                              className={classes.taskContent}\n                              onClick={(event) => {\n                                props.handleEditTask(\n                                  task.id,\n                                  task.content,\n                                  task.status\n                                );\n                              }}\n                              style={{\n                                textDecoration: styleContent[task.status][0],\n                                textDecorationColor: '#C0C0C3',\n                                color: styleContent[task.status][1],\n                              }}\n                            >\n                              {task.content}\n                            </span>\n                          </Typography>\n                        </div>\n\n                        {tasks.length === 0 && hasMore === false ? (\n                          <Typography variant='h6'>\n                            No task available\n                          </Typography>\n                        ) : (\n                          ''\n                        )}\n                      </Grid>\n                    </Grid>\n                  </Box>\n                );\n              })\n            : ''}\n        </InfiniteScroll>\n\n        <br />\n        <br />\n      </CardContent>\n    </>\n  );\n};\n\nexport default TaskContent;\n"]},"metadata":{},"sourceType":"module"}